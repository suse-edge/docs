# Chinese translations for PACKAGE package
# PACKAGE 软件包的简体中文翻译
# Copyright (C) 2024 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-07-23 11:17+0100\n"
"PO-Revision-Date: 2024-07-23 11:17+0100\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: asciidoc/quickstart/eib.adoc:1
#, no-wrap
msgid "Standalone clusters with Edge Image Builder"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:2
msgid ""
"Edge Image Builder (EIB) is a tool that streamlines the process of "
"generating customized, ready-to-boot (CRB) disk images for bootstrapping "
"machines, even in fully air-gapped scenarios. EIB is used to create "
"deployment images for use in all three of the SUSE Edge deployment "
"footprints, as it's flexible enough to offer the smallest customizations, e."
"g. adding a user or setting the timezone, through offering a comprehensively "
"configured image that sets up, for example, complex networking "
"configurations, deploys multi-node Kubernetes clusters, deploys customer "
"workloads, and registers to the centralized management platform via Rancher/"
"Elemental and SUSE Manager. EIB runs as in a container image, making it "
"incredibly portable across platforms and ensuring that all of the required "
"dependencies are self-contained, having a very minimal impact on the "
"installed packages of the system that's being used to operate the tool."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:3
msgid ""
"For more information, read the <<components-eib,Edge Image Builder "
"Introduction>>."
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/eib.adoc:4 asciidoc/quickstart/metal3.adoc:10
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:5
msgid ""
"An x86_64 physical host (or virtual machine) running SLES 15 SP5, openSUSE "
"Leap 15.5, or openSUSE Tumbleweed."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:6
msgid "An available container runtime (e.g. Podman)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:7
msgid ""
"A downloaded copy of the latest SLE Micro 5.5 SelfInstall \"GM2\" ISO image "
"found https://www.suse.com/download/sle-micro/[here]."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:8
msgid ""
"Other operating systems may function so long as a compatible container "
"runtime is available, but testing on other platforms has not been extensive. "
"The documentation focuses on Podman, but the same functionality should be "
"able to be achieved with Docker."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/eib.adoc:9
#, no-wrap
msgid "Getting the EIB Image"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:10
msgid ""
"The EIB container image is publicly available and can be downloaded from the "
"SUSE Edge registry by running the following command on your image build host:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:11
#, no-wrap
msgid "podman pull registry.suse.com/edge/edge-image-builder:1.0.2\n"
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/eib.adoc:12
#, no-wrap
msgid "Creating the image configuration directory"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:13
msgid ""
"As EIB runs within a container, we need to mount a configuration directory "
"from the host, enabling you to specify your desired configuration, and "
"during the build process EIB has access to any required input files and "
"supporting artifacts. This directory must follow a specific structure. Let's "
"create it, assuming that this directory will exist in your home directory, "
"and called \"eib\":"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:14
#, no-wrap
msgid ""
"export CONFIG_DIR=$HOME/eib\n"
"mkdir -p $CONFIG_DIR/base-images\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:15
msgid ""
"In the previous step we created a \"base-images\" directory that will host "
"the SLE Micro 5.5 input image, let's ensure that the downloaded image is "
"copied over to the configuration directory:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:16
#, no-wrap
msgid "cp /path/to/downloads/SLE-Micro.x86_64-5.5.0-Default-SelfInstall-GM2.install.iso $CONFIG_DIR/base-images/slemicro.iso\n"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/eib.adoc:17
msgid ""
"During the EIB run, the original base image is *not* modified; a new and "
"customized version is created with the desired configuration in the root of "
"the EIB config directory."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:18
msgid ""
"The configuration directory at this point should look like the following:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:19
#, no-wrap
msgid ""
"└── base-images/\n"
"    └── slemicro.iso\n"
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/eib.adoc:20
#, no-wrap
msgid "Creating the image definition file"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:21
msgid ""
"The definition file describes the majority of configurable options that the "
"Edge Image Builder supports, a full example of options can be found https://"
"github.com/suse-edge/edge-image-builder/blob/release-1.0/pkg/image/testdata/"
"full-valid-example.yaml[here], and we would recommend that you take a look "
"at the https://github.com/suse-edge/edge-image-builder/blob/release-1.0/docs/"
"building-images.md[upstream building images guide] for more comprehensive "
"examples than the one we're going to run through below. Let's start with a "
"very basic definition file for our OS image:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:22
#, no-wrap
msgid ""
"cat << EOF > $CONFIG_DIR/iso-definition.yaml\n"
"apiVersion: 1.0\n"
"image:\n"
"  imageType: iso\n"
"  arch: x86_64\n"
"  baseImage: slemicro.iso\n"
"  outputImageName: eib-image.iso\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:23
msgid ""
"This definition specifies that we're generating an output image for an "
"`x86_64` based system. The image that will be used as the base for further "
"modification is an `iso` image named `slemicro.iso`, expected to be located "
"at `$CONFIG_DIR/base-images/slemicro.iso`. It also outlines that after EIB "
"finishes modifying the image, the output image will be named `eib-image."
"iso`, and by default will reside in `$CONFIG_DIR`."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:24
msgid "Now our directory structure should look like:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:25
#, no-wrap
msgid ""
"├── iso-definition.yaml\n"
"└── base-images/\n"
"    └── slemicro.iso\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:26
msgid ""
"In the following sections we'll walk through a few examples of common "
"operations:"
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/eib.adoc:27
#, no-wrap
msgid "Configuring OS Users"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:28
msgid ""
"EIB allows you to preconfigure users with login information, such as "
"passwords or SSH keys, including setting a fixed root password. As part of "
"this example we're going to fix the root password, and the first step is to "
"use `OpenSSL` to create a one-way encrypted password:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:29
#, no-wrap
msgid "openssl passwd -6 SecurePassword\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:30
msgid "This will output something similar to:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:31
#, no-wrap
msgid "$6$G392FCbxVgnLaFw1$Ujt00mdpJ3tDHxEg1snBU3GjujQf6f8kvopu7jiCBIhRbRvMmKUqwcmXAKggaSSKeUUOEtCP3ZUoZQY7zTXnC1\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:32
msgid ""
"We can then add a section in the definition file called `operatingSystem` "
"with a `users` array inside it. The resulting file should look like:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:33
#, no-wrap
msgid ""
"apiVersion: 1.0\n"
"image:\n"
"  imageType: iso\n"
"  arch: x86_64\n"
"  baseImage: slemicro.iso\n"
"  outputImageName: eib-image.iso\n"
"operatingSystem:\n"
"  users:\n"
"    - username: root\n"
"      encryptedPassword: $6$G392FCbxVgnLaFw1$Ujt00mdpJ3tDHxEg1snBU3GjujQf6f8kvopu7jiCBIhRbRvMmKUqwcmXAKggaSSKeUUOEtCP3ZUoZQY7zTXnC1\n"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/eib.adoc:34
msgid ""
"It's also possible to add additional users, create the home directories, set "
"user-id's, add ssh-key authentication, and modify group information. Please "
"refer to the https://github.com/suse-edge/edge-image-builder/blob/"
"release-1.0/docs/building-images.md[upstream building images guide] for "
"further examples."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/eib.adoc:35
#, no-wrap
msgid "Configuring RPM packages"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:36
msgid ""
"One of the major features of EIB is to provide a mechanism to add additional "
"software packages to the image, so when the installation completes the "
"system is able to leverage the installed packages right away. EIB permits "
"users to specify the following:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:37
msgid "Packages by their name within a list in the image definition"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:38
msgid "Network repositories to search for these packages in"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:39
msgid ""
"SUSE Customer Center (SCC) credentials to search official SUSE repositories "
"for the listed packages"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:40
msgid ""
"Via an `$CONFIG_DIR/rpms` directory, side-load custom RPM's that don't exist "
"in network repositories"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:41
msgid ""
"Via the same directory (`$CONFIG_DIR/rpms/gpg-keys`), GPG-keys to enable "
"validation of third party packages"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:42
msgid ""
"EIB will then run through a package resolution process at image build time, "
"taking the base image as the input, and attempts to pull and install all "
"supplied packages, either specified via the list or provided locally. EIB "
"downloads all of the packages, including any dependencies into a repository "
"that exists within the output image and instructs the system to install "
"these during the first boot process. Doing this process during the image "
"build guarantees that the packages will successfully install during first-"
"boot on the desired platform, e.g. the node at the edge. This is also "
"advantageous in environments where you want to bake the additional packages "
"into the image rather than pull them over the network when in operation, e."
"g. for air-gapped or restricted network environments."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:43
msgid ""
"As a simple example to demonstrate this, we are going to install the `nvidia-"
"container-toolkit` RPM package found in the third party vendor-supported "
"NVIDIA repository:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:44
#, no-wrap
msgid ""
"  packages:\n"
"    packageList:\n"
"      - nvidia-container-toolkit\n"
"    additionalRepos:\n"
"      - url: https://nvidia.github.io/libnvidia-container/stable/rpm/x86_64\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:45
msgid "The resulting definition file looks like:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:46
#, no-wrap
msgid ""
"apiVersion: 1.0\n"
"image:\n"
"  imageType: iso\n"
"  arch: x86_64\n"
"  baseImage: slemicro.iso\n"
"  outputImageName: eib-image.iso\n"
"operatingSystem:\n"
"  users:\n"
"    - username: root\n"
"      encryptedPassword: $6$G392FCbxVgnLaFw1$Ujt00mdpJ3tDHxEg1snBU3GjujQf6f8kvopu7jiCBIhRbRvMmKUqwcmXAKggaSSKeUUOEtCP3ZUoZQY7zTXnC1\n"
"  packages:\n"
"    packageList:\n"
"      - nvidia-container-toolkit\n"
"    additionalRepos:\n"
"      - url: https://nvidia.github.io/libnvidia-container/stable/rpm/x86_64\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:47
msgid ""
"The above is a simple example, but for completeness, download the NVIDIA "
"package signing key before running the image generation:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:48
#, no-wrap
msgid ""
"$ mkdir -p $CONFIG_DIR/rpms/gpg-keys\n"
"$ curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey > rpms/gpg-keys/nvidia.gpg\n"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/eib.adoc:49
msgid ""
"Adding in additional RPM's via this method is meant for the addition of "
"supported third party components or user-supplied (and maintained) packages; "
"this mechanism should not be used to add packages that would not usually be "
"supported on SLE Micro. If this mechanism is used to add components from "
"openSUSE repositories (which are not supported), including from newer "
"releases or service packs, you may end up with an unsupported configuration, "
"especially when dependency resolution results in core parts of the operating "
"system being replaced, even though the resulting system may appear to "
"function as expected. If you're unsure, contact your SUSE representative for "
"assistance in determining the supportability of your desired configuration."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/eib.adoc:50
msgid ""
"A more comprehensive guide with additional examples can be found in the "
"https://github.com/suse-edge/edge-image-builder/blob/release-1.0/docs/"
"installing-packages.md[upstream installing packages guide]."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/eib.adoc:51
#, no-wrap
msgid "Configuring Kubernetes cluster and user workloads"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:52
msgid ""
"Another feature of EIB is the ability to use it to automate the deployment "
"of both single-node and multi-node highly-available Kubernetes clusters that "
"\"bootstrap in place\", i.e. don't require any form of centralized "
"management infrastructure to coordinate. The primary driver behind this "
"approach is for air-gapped deployments, or network restricted environments, "
"but it also serves as a way of quickly bootstrapping standalone clusters, "
"even if full and unrestricted network access is available."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:53
msgid ""
"This method enables not only the deployment of the customized operating "
"system, but also the ability to specify Kubernetes configuration, any "
"additional layered components via Helm charts, and any user workloads via "
"supplied Kubernetes manifests. However, the design principle behind using "
"this method is that we default to assuming that the user is wanting to air-"
"gap and therefore any items specified in the image definition will be pulled "
"into the image, which includes user-supplied workloads, where EIB will make "
"sure that any discovered images that are required by definitions supplied "
"are copied locally, and are served by the embedded image registry in the "
"resulting deployed system."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:54
msgid ""
"In this next example, we're going to take our existing image definition and "
"will specify a Kubernetes configuration (in this example it doesn't list the "
"systems and their roles, so we default to assuming single-node), which will "
"instruct EIB to provision a single-node RKE2 Kubernetes cluster. To show the "
"automation of both the deployment of both user-supplied workloads (via "
"manifest) and layered components (via Helm), we are going to install "
"KubeVirt via the SUSE Edge Helm chart, as well as NGINX via a Kubernetes "
"manifest. The additional configuration we need to append to the existing "
"image definition is as follows:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:55
#, no-wrap
msgid ""
"kubernetes:\n"
"  version: v1.28.9+rke2r1\n"
"  manifests:\n"
"    urls:\n"
"      - https://k8s.io/examples/application/nginx-app.yaml\n"
"  helm:\n"
"    charts:\n"
"      - name: kubevirt-chart\n"
"        version: 0.2.4\n"
"        repositoryName: suse-edge\n"
"    repositories:\n"
"      - name: suse-edge\n"
"        url: oci://registry.suse.com/edge\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:56
msgid "The resulting full definition file should now look like:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:57
#, no-wrap
msgid ""
"apiVersion: 1.0\n"
"image:\n"
"  imageType: iso\n"
"  arch: x86_64\n"
"  baseImage: slemicro.iso\n"
"  outputImageName: eib-image.iso\n"
"operatingSystem:\n"
"  users:\n"
"    - username: root\n"
"      encryptedPassword: $6$G392FCbxVgnLaFw1$Ujt00mdpJ3tDHxEg1snBU3GjujQf6f8kvopu7jiCBIhRbRvMmKUqwcmXAKggaSSKeUUOEtCP3ZUoZQY7zTXnC1\n"
"  packages:\n"
"    packageList:\n"
"      - nvidia-container-toolkit\n"
"    additionalRepos:\n"
"      - url: https://nvidia.github.io/libnvidia-container/stable/rpm/x86_64\n"
"kubernetes:\n"
"  version: v1.28.9+rke2r1\n"
"  manifests:\n"
"    urls:\n"
"      - https://k8s.io/examples/application/nginx-app.yaml\n"
"  helm:\n"
"    charts:\n"
"      - name: kubevirt-chart\n"
"        version: 0.2.4\n"
"        repositoryName: suse-edge\n"
"    repositories:\n"
"      - name: suse-edge\n"
"        url: oci://registry.suse.com/edge\n"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/eib.adoc:58
msgid ""
"Further examples of options such as multi-node deployments, custom "
"networking, and Helm chart options/values can be found in the https://github."
"com/suse-edge/edge-image-builder/blob/release-1.0/docs/building-images."
"md#kubernetes[upstream documentation]."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/eib.adoc:59
#, no-wrap
msgid "Configuring the network"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:60
msgid ""
"In the last example in this quickstart, let's configure the network that "
"will be brought up when a system is provisioned with the image generated by "
"EIB. It's important to understand that unless a network configuration is "
"supplied, the default model is that DHCP will be used on all interfaces "
"discovered at boot time. However, this is not always a desirable "
"configuration, especially if DHCP is not available and you need to provide "
"static configurations, or you need to set up more complex networking "
"constructs, e.g. bonds, LACP, and VLAN's, or need to override certain "
"parameters, e.g. hostnames, DNS servers, and routes."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:61
msgid ""
"EIB provides the ability to provide either per-node configurations (where "
"the system in question is uniquely identified by its MAC address), or an "
"override for supplying an identical configuration to each machine, which is "
"more useful when the system MAC addresses aren't known. An additional tool "
"is used by EIB called Network Manager Configurator, or `nmc` for short, "
"which is a tool built by the SUSE Edge team to allow custom networking "
"configurations to be applied based on the https://nmstate.io/[nmstate.io] "
"declarative network schema, and at boot time will identify the node it's "
"booting on and will apply the desired network configuration prior to any "
"services coming up."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:62
msgid ""
"We'll now apply a static network configuration for a system with a single "
"interface by describing the desired network state in a node-specific file "
"(based on the desired hostname) in the required `network` directory:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:63
#, no-wrap
msgid "mkdir $CONFIG_DIR/network\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:64
#, no-wrap
msgid ""
"cat << EOF > $CONFIG_DIR/network/host1.local.yaml\n"
"routes:\n"
"  config:\n"
"  - destination: 0.0.0.0/0\n"
"    metric: 100\n"
"    next-hop-address: 192.168.122.1\n"
"    next-hop-interface: eth0\n"
"    table-id: 254\n"
"  - destination: 192.168.122.0/24\n"
"    metric: 100\n"
"    next-hop-address:\n"
"    next-hop-interface: eth0\n"
"    table-id: 254\n"
"dns-resolver:\n"
"  config:\n"
"    server:\n"
"    - 192.168.122.1\n"
"    - 8.8.8.8\n"
"interfaces:\n"
"- name: eth0\n"
"  type: ethernet\n"
"  state: up\n"
"  mac-address: 34:8A:B1:4B:16:E7\n"
"  ipv4:\n"
"    address:\n"
"    - ip: 192.168.122.50\n"
"      prefix-length: 24\n"
"    dhcp: false\n"
"    enabled: true\n"
"  ipv6:\n"
"    enabled: false\n"
"EOF\n"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/eib.adoc:65
msgid ""
"The above example is set up for the default `192.168.122.0/24` subnet "
"assuming that testing is being executed on a virtual machine, please adapt "
"to suit your environment, not forgetting the MAC address. As the same image "
"can be used to provision multiple nodes, networking configured by EIB (via "
"`nmc`) is dependent on it being able to uniquely identify the node by its "
"MAC address, and hence during boot `nmc` will apply the correct networking "
"configuration to each machine. This means that you'll need to know the MAC "
"addresses of the systems you want to install onto. Alternatively, the "
"default behavior is to rely on DHCP, but you can utilize the `configure-"
"network.sh` hook to apply a common configuration to all nodes - see the "
"<<components-nmc,networking guide>> for further details."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:66
msgid "The resulting file structure should look like:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:67
#, no-wrap
msgid ""
"├── iso-definition.yaml\n"
"├── base-images/\n"
"│   └── slemicro.iso\n"
"└── network/  \n"
"    └── host1.local.yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:68
msgid ""
"The network configuration we just created will be parsed and the necessary "
"NetworkManager connection files will be automatically generated and inserted "
"into the new installation image that EIB will create. These files will be "
"applied during the provisioning of the host, resulting in a complete network "
"configuration."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/eib.adoc:69
msgid ""
"Please refer to the <<components-nmc, Edge Networking component>> for a more "
"comprehensive explanation of the above configuration and examples of this "
"feature."
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/eib.adoc:70
#, no-wrap
msgid "Building the image"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:71
msgid ""
"Now that we've got a base image and an image definition for EIB to consume, "
"let's go ahead and build the image. For this, we simply use `podman` to call "
"the EIB container with the \"build\" command, specifying the definition file:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:72
#, no-wrap
msgid ""
"podman run --rm -it --privileged -v $CONFIG_DIR:/eib \\\n"
"registry.suse.com/edge/edge-image-builder:1.0.2 \\\n"
"build --definition-file iso-definition.yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:73
msgid "The output of the command should be similar to:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:74
#, no-wrap
msgid ""
"Setting up Podman API listener...\n"
"Generating image customization components...\n"
"Identifier ................... [SUCCESS]\n"
"Custom Files ................. [SKIPPED]\n"
"Time ......................... [SKIPPED]\n"
"Network ...................... [SUCCESS]\n"
"Groups ....................... [SKIPPED]\n"
"Users ........................ [SUCCESS]\n"
"Proxy ........................ [SKIPPED]\n"
"Resolving package dependencies...\n"
"Rpm .......................... [SUCCESS]\n"
"Systemd ...................... [SKIPPED]\n"
"Elemental .................... [SKIPPED]\n"
"Suma ......................... [SKIPPED]\n"
"Downloading file: dl-manifest-1.yaml 100%  (498/498 B, 5.9 MB/s)\n"
"Populating Embedded Artifact Registry... 100%  (3/3, 11 it/min)\n"
"Embedded Artifact Registry ... [SUCCESS]\n"
"Keymap ....................... [SUCCESS]\n"
"Configuring Kubernetes component...\n"
"The Kubernetes CNI is not explicitly set, defaulting to 'cilium'.\n"
"Downloading file: rke2_installer.sh\n"
"Downloading file: rke2-images-core.linux-amd64.tar.zst 100% (782/782 MB, 98 MB/s)\n"
"Downloading file: rke2-images-cilium.linux-amd64.tar.zst 100% (367/367 MB, 100 MB/s)\n"
"Downloading file: rke2.linux-amd64.tar.gz 100%  (34/34 MB, 101 MB/s)\n"
"Downloading file: sha256sum-amd64.txt 100%  (3.9/3.9 kB, 1.5 MB/s)\n"
"Downloading file: dl-manifest-1.yaml 100%  (498/498 B, 7.2 MB/s)\n"
"Kubernetes ................... [SUCCESS]\n"
"Certificates ................. [SKIPPED]\n"
"Building ISO image...\n"
"Kernel Params ................ [SKIPPED]\n"
"Image build complete!\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:75
msgid "The built ISO image is stored at `$CONFIG_DIR/eib-image.iso`:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:76
#, no-wrap
msgid ""
"├── iso-definition.yaml\n"
"├── eib-image.iso\n"
"├── _build\n"
"│   └── cache/\n"
"│       └── ...\n"
"│   └── build-<timestamp>/\n"
"│       └── ...\n"
"├── base-images/\n"
"│   └── slemicro.iso\n"
"└── network/\n"
"    └── host1.local.yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:77
msgid ""
"Each build creates a time-stamped folder in `$CONFIG_DIR/_build/` that "
"includes the logs of the build, the artifacts used during the build, and the "
"`combustion` and `artefacts` directories which contain all the scripts and "
"artifacts that are added to the CRB image."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:78
msgid "The contents of this directory should look like:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/eib.adoc:79
#, no-wrap
msgid ""
"├── build-<timestamp>/\n"
"│   │── combustion/\n"
"│   │   ├── 05-configure-network.sh\n"
"│   │   ├── 10-rpm-install.sh\n"
"│   │   ├── 12-keymap-setup.sh\n"
"│   │   ├── 13b-add-users.sh\n"
"│   │   ├── 20-k8s-install.sh\n"
"│   │   ├── 26-embedded-registry.sh\n"
"│   │   ├── 48-message.sh\n"
"│   │   ├── network/\n"
"│   │   │   ├── host1.local/\n"
"│   │   │   │   └── eth0.nmconnection\n"
"│   │   │   └── host_config.yaml\n"
"│   │   ├── nmc\n"
"│   │   └── script\n"
"│   │── artefacts/\n"
"│   │   │── registry/\n"
"│   │   │   ├── hauler\n"
"│   │   │   ├── nginx:1.14.2-registry.tar.zst\n"
"│   │   │   ├── rancher_kubectl:v1.28.7-registry.tar.zst\n"
"│   │   │   └── registry.suse.com_suse_sles_15.5_virt-operator:1.1.1-150500.8.12.1-registry.tar.zst\n"
"│   │   │── rpms/\n"
"│   │   │   └── rpm-repo\n"
"│   │   │       ├── addrepo0\n"
"│   │   │       │   └── x86_64\n"
"│   │   │       │       ├── nvidia-container-toolkit-1.15.0-1.x86_64.rpm\n"
"│   │   │       │       ├── ...\n"
"│   │   │       ├── repodata\n"
"│   │   │       │   ├── ...\n"
"│   │   │       └── zypper-success\n"
"│   │   └── kubernetes/\n"
"│   │       ├── rke2_installer.sh\n"
"│   │       ├── registries.yaml\n"
"│   │       ├── server.yaml\n"
"│   │       ├── images/\n"
"│   │       │   ├── rke2-images-cilium.linux-amd64.tar.zst\n"
"│   │       │   └── rke2-images-core.linux-amd64.tar.zst\n"
"│   │       ├── install/\n"
"│   │       │   ├── rke2.linux-amd64.tar.gz\n"
"│   │       │   └── sha256sum-amd64.txt\n"
"│   │       └── manifests/\n"
"│   │           ├── dl-manifest-1.yaml\n"
"│   │           └── kubevirt-chart.yaml\n"
"│   ├── createrepo.log\n"
"│   ├── eib-build.log\n"
"│   ├── embedded-registry.log\n"
"│   ├── helm\n"
"│   │   └── kubevirt-chart\n"
"│   │       └── kubevirt-0.2.4.tgz\n"
"│   ├── helm-pull.log\n"
"│   ├── helm-template.log\n"
"│   ├── iso-build.log\n"
"│   ├── iso-build.sh\n"
"│   ├── iso-extract\n"
"│   │   └── ...\n"
"│   ├── iso-extract.log\n"
"│   ├── iso-extract.sh\n"
"│   ├── modify-raw-image.sh\n"
"│   ├── network-config.log\n"
"│   ├── podman-image-build.log\n"
"│   ├── podman-system-service.log\n"
"│   ├── prepare-resolver-base-tarball-image.log\n"
"│   ├── prepare-resolver-base-tarball-image.sh\n"
"│   ├── raw-build.log\n"
"│   ├── raw-extract\n"
"│   │   └── ...\n"
"│   └── resolver-image-build\n"
"│       └──...\n"
"└── cache\n"
"    └── ...\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:80
msgid ""
"If the build fails, `eib-build.log` is the first log that contains "
"information. From there, it will direct you to the component that failed for "
"debugging."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:81
msgid "At this point, you should have a ready-to-use image that will:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:82
msgid "Deploy SLE Micro 5.5"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:83
msgid "Configure the root password"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:84
msgid "Install the `nvidia-container-toolkit` package"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:85
msgid "Configure an embedded container registry to serve content locally"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:86
msgid "Install single-node RKE2"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:87
msgid "Configure static networking"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:88
msgid "Install KubeVirt"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:89
msgid "Deploy a user-supplied manifest"
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/eib.adoc:90
#, no-wrap
msgid "Debugging the image build process"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:91
msgid ""
"If the image build process fails, refer to the https://github.com/suse-edge/"
"edge-image-builder/blob/release-1.0/docs/debugging.md[upstream debugging "
"guide]."
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/eib.adoc:92
#, no-wrap
msgid "Testing your newly built image"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/eib.adoc:93
msgid ""
"For instructions on how to test the newly built CRB image, refer to the "
"https://github.com/suse-edge/edge-image-builder/blob/release-1.0/docs/"
"testing-guide.md[upstream image testing guide]."
msgstr ""

#. type: Title =
#: asciidoc/quickstart/elemental.adoc:1
#, no-wrap
msgid "Remote host onboarding with Elemental"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:2
msgid ""
"This section documents the \"phone home network provisioning\" solution as "
"part of SUSE Edge, where we use Elemental to assist with node onboarding. "
"Elemental is a software stack enabling remote host registration and "
"centralized full cloud-native OS management with Kubernetes. In the SUSE "
"Edge stack we use the registration feature of Elemental to enable remote "
"host onboarding into Rancher so that hosts can be integrated into a "
"centralized management platform and from there, deploy and manage Kubernetes "
"clusters along with layered components, applications, and their lifecycle, "
"all from a common place."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:3
msgid ""
"This approach can be useful in scenarios where the devices that you want to "
"control are not on the same network as the upstream cluster or do not have a "
"out-of-band management controller onboard to allow more direct control, and "
"where you're booting many different \"unknown\" systems at the edge, and "
"need to securely onboard and manage them at scale. This is a common scenario "
"for use cases in retail, industrial IoT, or other spaces where you have "
"little control over the network your devices are being installed in."
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/elemental.adoc:4 asciidoc/quickstart/metal3.adoc:8
#, no-wrap
msgid "High-level architecture"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:5
#, no-wrap
msgid "quickstart-elemental-architecture.png"
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/elemental.adoc:6
#, no-wrap
msgid "Resources needed"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:7
msgid ""
"The following describes the minimum system and environmental requirements to "
"run through this quickstart:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:8
msgid ""
"A host for the centralized management cluster (the one hosting Rancher and "
"Elemental):"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:9
msgid ""
"Minimum 8 GB RAM and 20 GB disk space for development or testing (see "
"https://ranchermanager.docs.rancher.com/pages-for-subheaders/installation-"
"requirements#hardware-requirements[here] for production use)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:10
msgid ""
"A target node to be provisioned, i.e. the edge device (a virtual machine can "
"be used for demoing or testing purposes)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:11
msgid "Minimum 4GB RAM, 2 CPU cores, and 20 GB disk"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:12
msgid ""
"A resolvable host name for the management cluster or a static IP address to "
"use with a service like sslip.io"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:13
msgid "A host to build the installation media via Edge Image Builder"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:14
msgid ""
"Running SLES 15 SP5, openSUSE Leap 15.5, or another compatible operating "
"system that supports Podman."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:15
msgid ""
"With https://kubernetes.io/docs/reference/kubectl/kubectl/[Kubectl], https://"
"podman.io[Podman], and https://helm.sh[Helm] installed"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:16
msgid "A USB flash drive to boot from (if using physical hardware)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:17
msgid ""
"Existing data found on target machines will be overwritten as part of the "
"process, please make sure you backup any data on any USB storage devices and "
"disks attached to target deployment nodes."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:18
msgid ""
"This guide is created using a Digital Ocean droplet to host the upstream "
"cluster and an Intel NUC as the downstream device. For building the "
"installation media, SUSE Linux Enterprise Server is used."
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/elemental.adoc:19
#, no-wrap
msgid "How to use Elemental"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:20
msgid "The basic steps to install and use Elemental are:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:21
msgid "<<build-bootstrap-cluster>>"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:22
msgid "<<install-rancher>>"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:23
msgid "<<install-elemental>>"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:24
msgid "<<build-installation-media>>"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:25
msgid "<<boot-downstream-nodes>>"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:26
msgid "<<create-downstream-clusters>>"
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/elemental.adoc:27
#, no-wrap
msgid "Build bootstrap cluster [[build-bootstrap-cluster]]"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:28
msgid ""
"Start by creating a cluster capable of hosting Rancher and Elemental. This "
"cluster needs to be routable from the network that the downstream nodes are "
"connected to."
msgstr ""

#. type: Title ====
#: asciidoc/quickstart/elemental.adoc:29
#, no-wrap
msgid "Create Kubernetes cluster"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:30
msgid ""
"If you are using a hyperscaler (such as Azure, AWS or Google Cloud), the "
"easiest way to set up a cluster is using their built-in tools. For the sake "
"of conciseness in this guide, we do not detail the process of each of these "
"options."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:31
msgid ""
"If you are installing onto bare metal or another hosting service where you "
"need to also provide the Kubernetes distribution itself, we recommend using "
"https://docs.rke2.io/install/quickstart[RKE2]."
msgstr ""

#. type: Title ====
#: asciidoc/quickstart/elemental.adoc:32
#, no-wrap
msgid "Set up DNS"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:33
msgid ""
"Before continuing, you need to set up access to your cluster. As with the "
"setup of the cluster itself, how you configure DNS will be different "
"depending on where it is being hosted."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:34
msgid ""
"If you do not want to handle setting up DNS records (for example, this is "
"just an ephemeral test server), you can use a service like https://sslip."
"io[sslip.io] instead. With this service, you can resolve any IP address with "
"`<address>.sslip.io`."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/elemental.adoc:35
#, no-wrap
msgid "Install Rancher [[install-rancher]]"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:36
msgid ""
"To install Rancher, you need to get access to the Kubernetes API of the "
"cluster you just created. This looks differently depending on what "
"distribution of Kubernetes is being used."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:37
msgid ""
"For RKE2, the kubeconfig file will have been written to `/etc/rancher/rke2/"
"rke2.yaml`.  Save this file as `~/.kube/config` on your local system.  You "
"may need to edit the file to include the correct externally routable IP "
"address or host name."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:38
msgid ""
"Install Rancher easily with the commands from the https://ranchermanager."
"docs.rancher.com/pages-for-subheaders/install-upgrade-on-a-kubernetes-"
"cluster[Rancher Documentation]:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:39
msgid "Install https://cert-manager.io[cert-manager]:"
msgstr ""

#. type: Labeled list
#: asciidoc/quickstart/elemental.adoc:40 asciidoc/quickstart/elemental.adoc:53
#: asciidoc/quickstart/elemental.adoc:129
#, no-wrap
msgid "Linux"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:41 asciidoc/quickstart/elemental.adoc:47
#, no-wrap
msgid "helm repo add rancher-prime https://charts.rancher.com/server-charts/prime\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:42 asciidoc/quickstart/elemental.adoc:48
#, no-wrap
msgid "kubectl create namespace cattle-system\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:43
#, no-wrap
msgid ""
"kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.3/cert-manager.crds.yaml\n"
"helm repo add jetstack https://charts.jetstack.io\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:44
#, no-wrap
msgid "helm repo update\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:45
#, no-wrap
msgid ""
"helm install cert-manager jetstack/cert-manager \\\n"
" --namespace cert-manager \\\n"
" --create-namespace\n"
msgstr ""

#. type: Labeled list
#: asciidoc/quickstart/elemental.adoc:46 asciidoc/quickstart/elemental.adoc:55
#, no-wrap
msgid "Windows"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:49
#, no-wrap
msgid "kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.3/cert-manager.crds.yaml\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:50
#, no-wrap
msgid "helm repo add jetstack https://charts.jetstack.io\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:51
#, no-wrap
msgid ""
"helm repo update\n"
"helm install cert-manager jetstack/cert-manager `\n"
"  --namespace cert-manager `\n"
"  --create-namespace\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:52
msgid "Then install Rancher itself:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:54
#, no-wrap
msgid ""
"helm install rancher rancher-prime/rancher \\\n"
"  --namespace cattle-system \\\n"
"  --set hostname=<DNS or sslip from above> \\\n"
"  --set replicas=1 \\\n"
"  --set bootstrapPassword=<PASSWORD_FOR_RANCHER_ADMIN>\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:56
#, no-wrap
msgid ""
"helm install rancher rancher-prime/rancher `\n"
"  --namespace cattle-system `\n"
"  --set hostname=<DNS or sslip from above> `\n"
"  --set replicas=1 `\n"
"  --set bootstrapPassword=<PASSWORD_FOR_RANCHER_ADMIN>\n"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:57
msgid ""
"If this is intended to be a production system, please use cert-manager to "
"configure a real certificate (such as one from Let's Encrypt)."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:58
msgid ""
"Browse to the host name you set up and log in to Rancher with the "
"`bootstrapPassword` you used. You will be guided through a short setup "
"process."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/elemental.adoc:59
#, no-wrap
msgid "Install Elemental [[install-elemental]]"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:60
msgid ""
"With Rancher installed, you can now install the Elemental operator and "
"required CRD's. The Helm chart for Elemental is published as an OCI artifact "
"so the installation is a little simpler than other charts.  It can be "
"installed from either the same shell you used to install Rancher or in the "
"browser from within Rancher's shell."
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:61
#, no-wrap
msgid ""
"helm install --create-namespace -n cattle-elemental-system \\\n"
" elemental-operator-crds \\\n"
" oci://registry.suse.com/rancher/elemental-operator-crds-chart \\\n"
" --version 1.4.4\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:62
#, no-wrap
msgid ""
"helm install --create-namespace -n cattle-elemental-system \\\n"
" elemental-operator \\\n"
" oci://registry.suse.com/rancher/elemental-operator-chart \\\n"
" --version 1.4.4\n"
msgstr ""

#. type: Title ====
#: asciidoc/quickstart/elemental.adoc:63
#, no-wrap
msgid "(Optionally) Install the Elemental UI extension"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:64
msgid ""
"To use the Elemental UI, log in to your Rancher instance, click the three-"
"dot menu in the upper left:"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: asciidoc/quickstart/elemental.adoc:65
#, no-wrap
msgid "Installing Elemental extension1"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:66
#, no-wrap
msgid "installing-elemental-extension-1.png"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:67
msgid ""
"From the \"Available\" tab on this page, click \"Install\" on the Elemental "
"card:"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: asciidoc/quickstart/elemental.adoc:68
#, no-wrap
msgid "Installing Elemental extension 2"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:69
#, no-wrap
msgid "installing-elemental-extension-2.png"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:70
msgid "Confirm that you want to install the extension:"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: asciidoc/quickstart/elemental.adoc:71
#, no-wrap
msgid "Installing Elemental extension 3"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:72
#, no-wrap
msgid "installing-elemental-extension-3.png"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:73
msgid "After it installs, you will be prompted to reload the page."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: asciidoc/quickstart/elemental.adoc:74
#, no-wrap
msgid "Installing Elemental extension 4"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:75
#, no-wrap
msgid "installing-elemental-extension-4.png"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:76
msgid ""
"Once you reload, you can access the Elemental extension through the \"OS "
"Management\" global app."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: asciidoc/quickstart/elemental.adoc:77
#, no-wrap
msgid "Accessing Elemental extension"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:78
#, no-wrap
msgid "accessing-elemental-extension.png"
msgstr ""

#. type: Title ====
#: asciidoc/quickstart/elemental.adoc:79
#, no-wrap
msgid "Configure Elemental"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:80
msgid ""
"For simplicity, we recommend setting the variable `$ELEM` to the full path "
"of where you want the configuration directory:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:81
#, no-wrap
msgid ""
"export ELEM=$HOME/elemental\n"
"mkdir -p $ELEM\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:82
msgid ""
"To allow machines to register to Elemental, we need to create a "
"`MachineRegistration` object in the `fleet-default` namespace."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:83
msgid "Let us create a basic version of this object:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:84
#, no-wrap
msgid ""
"cat << EOF > $ELEM/registration.yaml\n"
"apiVersion: elemental.cattle.io/v1beta1\n"
"kind: MachineRegistration\n"
"metadata:\n"
"  name: ele-quickstart-nodes\n"
"  namespace: fleet-default\n"
"spec:\n"
"  machineName: \"\\${System Information/Manufacturer}-\\${System Information/UUID}\"\n"
"  machineInventoryLabels:\n"
"    manufacturer: \"\\${System Information/Manufacturer}\"\n"
"    productName: \"\\${System Information/Product Name}\"\n"
"EOF\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:85
#, no-wrap
msgid "kubectl apply -f $ELEM/registration.yaml\n"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:86 asciidoc/quickstart/elemental.adoc:118
msgid ""
"The `cat` command escapes each `$` with a backslash (`\\`) so that Bash does "
"not template them. Remove the backslashes if copying manually."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:87
msgid ""
"Once the object is created, find and note the endpoint that gets assigned:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:88
#, no-wrap
msgid "REGISURL=$(kubectl get machineregistration ele-quickstart-nodes -n fleet-default -o jsonpath='{.status.registrationURL}')\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:89
msgid "Alternatively, this can also be done from the UI."
msgstr ""

#. type: Labeled list
#: asciidoc/quickstart/elemental.adoc:90 asciidoc/quickstart/elemental.adoc:104
#: asciidoc/quickstart/elemental.adoc:141
#, no-wrap
msgid "UI Extension"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:91
msgid ""
"From the OS Management extension, click \"Create Registration Endpoint\":"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: asciidoc/quickstart/elemental.adoc:92
#, no-wrap
msgid "Click Create Registration"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:93
#, no-wrap
msgid "click-create-registration.png"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:94
msgid "Give this configuration a name."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: asciidoc/quickstart/elemental.adoc:95
#, no-wrap
msgid "Add Name"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:96
#, no-wrap
msgid "create-registration-name.png"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:97
msgid ""
"You can ignore the Cloud Configuration field as the data here is overridden "
"by the following steps with Edge Image Builder."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:98
msgid ""
"Next, scroll down and click \"Add Label\" for each label you want to be on "
"the resource that gets created when a machine registers. This is useful for "
"distinguishing machines."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: asciidoc/quickstart/elemental.adoc:99
#, no-wrap
msgid "Add Labels"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:100
#, no-wrap
msgid "create-registration-labels.png"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:101
msgid "Lastly, click \"Create\" to save the configuration."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: asciidoc/quickstart/elemental.adoc:102
#, no-wrap
msgid "Click Create"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:103
#, no-wrap
msgid "create-registration-create.png"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:105
msgid ""
"If you just created the configuration, you should see the Registration URL "
"listed and can click \"Copy\" to copy the address:"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: asciidoc/quickstart/elemental.adoc:106
#, no-wrap
msgid "Copy URL"
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/elemental.adoc:107
#, no-wrap
msgid "get-registration-url.png"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:108
msgid ""
"If you clicked away from that screen, you can click \"Registration "
"Endpoints\" in the left menu, then click the name of the endpoint you just "
"created."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:109
msgid "This URL is used in the next step."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/elemental.adoc:110
#, no-wrap
msgid "Build the installation media [[build-installation-media]]"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:111
msgid ""
"While the current version of Elemental has a way to build its own "
"installation media, in SUSE Edge 3.0 we do this with the Edge Image Builder "
"instead, so the resulting system is built with https://www.suse.com/products/"
"micro/[SLE Micro] as the base Operating System."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:112
msgid ""
"For more details on the Edge Image Builder, check out the <<quickstart-eib,"
"Getting Started Guide for it>> and also the <<components-eib,Component "
"Documentation>>."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:113
msgid "From a Linux system with Podman installed, run:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:114
#, no-wrap
msgid ""
"mkdir -p $ELEM/eib_quickstart/base-images\n"
"mkdir -p $ELEM/eib_quickstart/elemental\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:115
#, no-wrap
msgid "curl $REGISURL -o $ELEM/eib_quickstart/elemental/elemental_config.yaml\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:116
#, no-wrap
msgid ""
"cat << EOF > $ELEM/eib_quickstart/eib-config.yaml\n"
"apiVersion: 1.0\n"
"image:\n"
"    imageType: iso\n"
"    arch: x86_64\n"
"    baseImage: SLE-Micro.x86_64-5.5.0-Default-SelfInstall-GM.install.iso\n"
"    outputImageName: elemental-image.iso\n"
"operatingSystem:\n"
"  users:\n"
"    - username: root\n"
"      encryptedPassword: \\$6\\$jHugJNNd3HElGsUZ\\$eodjVe4te5ps44SVcWshdfWizrP.xAyd71CVEXazBJ/.v799/WRCBXxfYmunlBO2yp1hm/zb4r8EmnrrNCF.P/\n"
"EOF\n"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:117
msgid "The unencoded password is `eib`."
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:119
#, no-wrap
msgid ""
"podman run --privileged --rm -it -v $ELEM/eib_quickstart/:/eib \\\n"
" registry.suse.com/edge/edge-image-builder:1.0.2 \\\n"
" build --definition-file eib-config.yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:120
msgid ""
"If you are booting a physical device, we need to burn the image to a USB "
"flash drive. This can be done with:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:121
#, no-wrap
msgid "sudo dd if=/eib_quickstart/elemental-image.iso of=/dev/<PATH_TO_DISK_DEVICE> status=progress\n"
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/elemental.adoc:122
#, no-wrap
msgid "Boot the downstream nodes [[boot-downstream-nodes]]"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:123
msgid ""
"Now that we have created the installation media, we can boot our downstream "
"nodes with it."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:124
msgid ""
"For each of the systems that you want to control with Elemental, add the "
"installation media and boot the device. After installation, it will reboot "
"and register itself."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:125
msgid ""
"If you are using the UI extension, you should see your node appear in the "
"\"Inventory of Machines.\""
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:126
msgid ""
"Do not remove the installation medium until you've seen the login prompt; "
"during first-boot files are still accessed on the USB stick."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/elemental.adoc:127
#, no-wrap
msgid "Create downstream clusters [[create-downstream-clusters]]"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:128
msgid ""
"There are two objects we need to create when provisioning a new cluster "
"using Elemental."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:130
msgid ""
"The first is the `MachineInventorySelectorTemplate`. This object allows us "
"to specify a mapping between clusters and the machines in the inventory."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:131
msgid ""
"Create a selector which will match any machine in the inventory with a label:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:132
#, no-wrap
msgid ""
"cat << EOF > $ELEM/selector.yaml\n"
"apiVersion: elemental.cattle.io/v1beta1\n"
"kind: MachineInventorySelectorTemplate\n"
"metadata:\n"
"  name: location-123-selector\n"
"  namespace: fleet-default\n"
"spec:\n"
"  template:\n"
"    spec:\n"
"      selector:\n"
"        matchLabels:\n"
"          locationID: '123'\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:133
msgid "Apply the resource to the cluster:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:134
#, no-wrap
msgid "kubectl apply -f $ELEM/selector.yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:135
msgid "Obtain the name of the machine and add the matching label:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:136
#, no-wrap
msgid "MACHINENAME=$(kubectl get MachineInventory -n fleet-default | awk 'NR>1 {print $1}')\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:137
#, no-wrap
msgid ""
"kubectl label MachineInventory -n fleet-default \\\n"
" $MACHINENAME locationID=123\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:138
msgid ""
"Create a simple single-node K3s cluster resource and apply it to the cluster:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:139
#, no-wrap
msgid ""
"cat << EOF > $ELEM/cluster.yaml\n"
"apiVersion: provisioning.cattle.io/v1\n"
"kind: Cluster\n"
"metadata:\n"
"  name: location-123\n"
"  namespace: fleet-default\n"
"spec:\n"
"  kubernetesVersion: v1.28.9+k3s1\n"
"  rkeConfig:\n"
"    machinePools:\n"
"      - name: pool1\n"
"        quantity: 1\n"
"        etcdRole: true\n"
"        controlPlaneRole: true\n"
"        workerRole: true\n"
"        machineConfigRef:\n"
"          kind: MachineInventorySelectorTemplate\n"
"          name: location-123-selector\n"
"          apiVersion: elemental.cattle.io/v1beta1\n"
"EOF\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:140
#, no-wrap
msgid "kubectl apply -f $ELEM/cluster.yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:142
msgid ""
"The UI extension allows for a few shortcuts to be taken. Note that managing "
"multiple locations may involve too much manual work."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:143
msgid ""
"As before, open the left three-dot menu and select \"OS Management.\" This "
"brings you back to the main screen for managing your Elemental systems."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:144
msgid ""
"On the left sidebar, click \"Inventory of Machines.\" This opens the "
"inventory of machines that have registered."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:145
msgid ""
"To create a cluster from these machines, select the systems you want, click "
"the \"Actions\" drop-down list, then \"Create Elemental Cluster.\" This "
"opens the Cluster Creation dialog while also creating a "
"MachineSelectorTemplate to use in the background."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:146
msgid ""
"On this screen, configure the cluster you want to be built. For this quick "
"start, K3s v1.28.9+k3s1 is selected and the rest of the options are left as "
"is."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:147
msgid "You may need to scroll down to see more options."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:148
msgid ""
"After creating these objects, you should see a new Kubernetes cluster spin "
"up using the new node you just installed with."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:149
msgid ""
"To allow for easier grouping of systems, you could add a startup script that "
"finds something in the environment that is known to be unique to that "
"location."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:150
msgid ""
"For example, if you know that each location will have a unique subnet, you "
"can write a script that finds the network prefix and adds a label to the "
"corresponding MachineInventory."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:151
msgid ""
"This would typically be custom to your system's design but could look like:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:152
#, no-wrap
msgid ""
"INET=`ip addr show dev eth0 | grep \"inet\\ \"`\n"
"elemental-register --label \"network=$INET\" \\\n"
" --label \"network=$INET\" /oem/registration\n"
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/elemental.adoc:153
#, no-wrap
msgid "Node Reset"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:154
msgid ""
"SUSE Rancher Elemental supports the ability to perform a \"node reset\" "
"which can optionally trigger when either a whole cluster is deleted from "
"Rancher, a single node is deleted from a cluster, or a node is manually "
"deleted from the machine inventory. This is useful when you want to reset "
"and clean-up any orphaned resources and want to automatically bring the "
"cleaned node back into the machine inventory so it can be reused. This is "
"not enabled by default, and thus any system that is removed, will not be "
"cleaned up (i.e. data will not be removed, and any Kubernetes cluster "
"resources will continue to operate on the downstream clusters) and it will "
"require manual intervention to wipe data and re-register the machine to "
"Rancher via Elemental."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:155
msgid ""
"If you wish for this functionality to be enabled by default, you need to "
"make sure that your `MachineRegistration` explicitly enables this by adding "
"`config.elemental.reset.enabled: true`, for example:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:156
#, no-wrap
msgid ""
"config:\n"
"  elemental:\n"
"    registration:\n"
"      auth: tpm\n"
"    reset:\n"
"      enabled: true\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:157
msgid ""
"Then, all systems registered with this `MachineRegistration` will "
"automatically receive the `elemental.cattle.io/resettable: 'true'` "
"annotation in their configuration. If you wish to do this manually on "
"individual nodes, e.g. because you've got an existing `MachineInventory` "
"that doesn't have this annotation, or you have already deployed nodes, you "
"can modify the `MachineInventory` and add the `resettable` configuration, "
"for example:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/elemental.adoc:158
#, no-wrap
msgid ""
"apiVersion: elemental.cattle.io/v1beta1\n"
"kind: MachineInventory\n"
"metadata:\n"
"  annotations:\n"
"    elemental.cattle.io/os.unmanaged: 'true'\n"
"    elemental.cattle.io/resettable: 'true'\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:159
msgid ""
"In SUSE Edge 3.0, the Elemental Operator puts down a marker on the operating "
"system that will trigger the cleanup process automatically; it will stop all "
"Kubernetes services, remove all persistent data, uninstall all Kubernetes "
"services, cleanup any remaining Kubernetes/Rancher directories, and force a "
"re-registration to Rancher via the original Elemental `MachineRegistration` "
"configuration. This happens automaticaly, there is no need for any manual "
"intervention. The script that gets called can be found in `/opt/edge/"
"elemental_node_cleanup.sh` and is triggered via `systemd.path` upon the "
"placement of the marker, so its execution is immediate."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/elemental.adoc:160
msgid ""
"Using the `resettable` functionality assumes that the desired behavior when "
"removing a node/cluster from Rancher is to wipe data and force a re-"
"registration. Data loss is guaranteed in this situation, so only use this if "
"you're sure that you want automatic reset to be performed."
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/elemental.adoc:161
#, no-wrap
msgid "Next steps"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:162
msgid "Here are some recommended resources to research after using this guide:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:163
msgid "End-to-end automation in <<components-fleet>>"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/elemental.adoc:164
msgid "Additional network configuration options in <<components-nmc>>"
msgstr ""

#. type: Title =
#: asciidoc/quickstart/metal3.adoc:1
#, no-wrap
msgid "BMC automated deployments with Metal^3^"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:2
msgid ""
"Metal^3^ is a https://metal3.io/[CNCF project] which provides bare-metal "
"infrastructure management capabilities for Kubernetes."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:3
msgid ""
"Metal^3^ provides Kubernetes-native resources to manage the lifecycle of "
"bare-metal servers which support management via out-of-band protocols such "
"as https://www.dmtf.org/standards/redfish[Redfish]."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:4
msgid ""
"It also has mature support for https://cluster-api.sigs.k8s.io/[Cluster API "
"(CAPI)] which enables management of infrastructure resources across multiple "
"infrastructure providers via broadly adopted vendor-neutral APIs."
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/metal3.adoc:5
#, no-wrap
msgid "Why use this method"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:6
msgid ""
"This method is useful for scenarios where the target hardware supports out-"
"of-band management, and a fully automated infrastructure management flow is "
"desired."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:7
msgid ""
"A management cluster is configured to provide declarative APIs that enable "
"inventory and state management of downstream cluster bare-metal servers, "
"including automated inspection, cleaning and provisioning/deprovisioning."
msgstr ""

#. type: Target for macro image
#: asciidoc/quickstart/metal3.adoc:9
#, no-wrap
msgid "quickstart-metal3-architecture.png"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:11
msgid ""
"There are some specific constraints related to the downstream cluster server "
"hardware and networking:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:12
msgid "Management cluster"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:13
msgid "Must have network connectivity to the target server management/BMC API"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:14
msgid ""
"Must have network connectivity to the target server control plane network"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:15
msgid ""
"For multi-node management clusters, an additional reserved IP address is "
"required"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:16
msgid "Hosts to be controlled"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:17
msgid ""
"Must support out-of-band management via Redfish, iDRAC or iLO interfaces"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:18
msgid ""
"Must support deployment via virtual media (PXE is not currently supported)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:19
msgid ""
"Must have network connectivity to the management cluster for access to the "
"Metal^3^ provisioning APIs"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:20
msgid ""
"Some tools are required, these can be installed either on the management "
"cluster, or on a host which can access it."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:21
msgid ""
"https://kubernetes.io/docs/reference/kubectl/kubectl/[Kubectl], https://helm."
"sh[Helm] and https://cluster-api.sigs.k8s.io/user/quick-start.html#install-"
"clusterctl[Clusterctl]"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:22
msgid ""
"A container runtime such as https://podman.io[Podman] or https://"
"rancherdesktop.io[Rancher Desktop]"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:23
msgid ""
"The `SLE-Micro.x86_64-5.5.0-Default-GM.raw.xz` OS image file must be "
"downloaded from the https://scc.suse.com/[SUSE Customer Center] or the "
"https://www.suse.com/download/sle-micro/[SUSE Download page]."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:24
#, no-wrap
msgid "Setup Management Cluster"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:25
msgid "The basic steps to install a management cluster and use Metal^3^ are:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:26
msgid "Install an RKE2 management cluster"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:27
msgid "Install Rancher"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:28
msgid "Install a storage provider"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:29
msgid "Install the Metal^3^ dependencies"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:30
msgid "Install CAPI dependencies"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:31
msgid "Build a SLEMicro OS image for downstream cluster hosts"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:32
msgid "Register BareMetalHost CRs to define the bare-metal inventory"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:33
msgid "Create a downstream cluster by defining CAPI resources"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:34
msgid ""
"This guide assumes an existing RKE2 cluster and Rancher (including cert-"
"manager) has been installed, for example by using <<components-eib, Edge "
"Image Builder>>."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:35
msgid ""
"The steps here can also be fully automated as described in the <<atip-"
"management-cluster, ATIP management cluster documentation>>."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:36
#, no-wrap
msgid "Installing Metal^3^ dependencies"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:37
msgid ""
"If not already installed as part of the Rancher installation, cert-manager "
"must be installed and running."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:38
msgid ""
"A persistent storage provider must be installed. Longhorn is recommended but "
"local-path can also be used for dev/PoC environments. The instructions below "
"assume a StorageClass has been https://kubernetes.io/docs/tasks/administer-"
"cluster/change-default-storage-class/[marked as default], otherwise "
"additional configuration for the Metal^3^ chart is required."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:39
msgid ""
"An additional IP is required, which is managed by https://metallb.universe."
"tf/[MetalLB] to provide a consistent endpoint for the Metal^3^ management "
"services.  This IP must be part of the control plane subnet and reserved for "
"static configuration (not part of any DHCP pool)."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:40
msgid ""
"If the management cluster is a single node, the requirement for an "
"additional floating IP managed via MetalLB can be avoided, see <<Single-node "
"configuration, Single-node configuration>>"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:41
msgid "First, we install MetalLB:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:42
#, no-wrap
msgid ""
"helm install \\\n"
"  metallb oci://registry.suse.com/edge/metallb-chart \\\n"
"  --namespace metallb-system \\\n"
"  --create-namespace\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:43
msgid ""
"Then we define an `IPAddressPool` and `L2Advertisment` using the reserved "
"IP, defined as `STATIC_IRONIC_IP` below:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:44
#, no-wrap
msgid "export STATIC_IRONIC_IP=<STATIC_IRONIC_IP>\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:45
#, no-wrap
msgid ""
"cat <<-EOF | kubectl apply -f -\n"
"apiVersion: metallb.io/v1beta1\n"
"kind: IPAddressPool\n"
"metadata:\n"
"  name: ironic-ip-pool\n"
"  namespace: metallb-system\n"
"spec:\n"
"  addresses:\n"
"  - ${STATIC_IRONIC_IP}/32\n"
"  serviceAllocation:\n"
"    priority: 100\n"
"    serviceSelectors:\n"
"    - matchExpressions:\n"
"      - {key: app.kubernetes.io/name, operator: In, values: [metal3-ironic]}\n"
"EOF\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:46
#, no-wrap
msgid ""
"cat <<-EOF | kubectl apply -f -\n"
"apiVersion: metallb.io/v1beta1\n"
"kind: L2Advertisement\n"
"metadata:\n"
"  name: ironic-ip-pool-l2-adv\n"
"  namespace: metallb-system\n"
"spec:\n"
"  ipAddressPools:\n"
"  - ironic-ip-pool\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:47
msgid "Now Metal^3^ can be installed:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:48
#, no-wrap
msgid ""
"helm install \\\n"
"  metal3 oci://registry.suse.com/edge/metal3-chart \\\n"
"  --namespace metal3-system \\\n"
"  --create-namespace \\\n"
"  --set global.ironicIP=\"${STATIC_IRONIC_IP}\"\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:49
msgid ""
"It can take around two minutes for the initContainer to run on this "
"deployment, so ensure the pods are all running before proceeding:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:50
#, no-wrap
msgid ""
"kubectl get pods -n metal3-system\n"
"NAME                                                    READY   STATUS    RESTARTS   AGE\n"
"baremetal-operator-controller-manager-85756794b-fz98d   2/2     Running   0          15m\n"
"metal3-metal3-ironic-677bc5c8cc-55shd                   4/4     Running   0          15m\n"
"metal3-metal3-mariadb-7c7d6fdbd8-64c7l                  1/1     Running   0          15m\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:51
msgid ""
"Do not proceed to the following steps until all pods in the `metal3-system` "
"namespace are running"
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:52
#, no-wrap
msgid "Installing cluster API dependencies"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:53
msgid "First, we need to disable the Rancher-embedded CAPI controller:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:54
#, no-wrap
msgid ""
"cat <<-EOF | kubectl apply -f -\n"
"apiVersion: management.cattle.io/v3\n"
"kind: Feature\n"
"metadata:\n"
"  name: embedded-cluster-api\n"
"spec:\n"
"  value: false\n"
"EOF\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:55
#, no-wrap
msgid ""
"kubectl delete mutatingwebhookconfiguration.admissionregistration.k8s.io mutating-webhook-configuration\n"
"kubectl delete validatingwebhookconfigurations.admissionregistration.k8s.io validating-webhook-configuration\n"
"kubectl wait --for=delete namespace/cattle-provisioning-capi-system --timeout=300s\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:56
msgid "Then, to use the SUSE images, a configuration file is needed:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:57
#, no-wrap
msgid ""
"mkdir ~/.cluster-api\n"
"cat >  ~/.cluster-api/clusterctl.yaml <<EOF\n"
"images:\n"
"  all:\n"
"    repository: registry.suse.com/edge\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:58
msgid ""
"Install https://cluster-api.sigs.k8s.io/user/quick-start.html#install-"
"clusterctl[clusterctl] 1.6.x, after which we will install the core, "
"infrastructure, bootstrap and control plane providers as follows:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:59
#, no-wrap
msgid "clusterctl init --core \"cluster-api:v1.6.2\" --infrastructure \"metal3:v1.6.0\" --bootstrap \"rke2:v0.2.6\" --control-plane \"rke2:v0.2.6\"\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:60
msgid ""
"After some time, the controller pods should be running in the `capi-system`, "
"`capm3-system`, `rke2-bootstrap-system` and `rke2-control-plane-system` "
"namespaces."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:61
#, no-wrap
msgid "Prepare downstream cluster image"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:62
msgid ""
"<<components-eib, Edge Image Builder>> is used to prepare a modified "
"SLEMicro base image which is provisioned on downstream cluster hosts."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:63
msgid ""
"Much of the configuration via Edge Image Builder is possible, but in this "
"guide, we cover the minimal configurations necessary to set up the "
"downstream cluster."
msgstr ""

#. type: Title ====
#: asciidoc/quickstart/metal3.adoc:64
#, no-wrap
msgid "Image configuration"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:65
msgid ""
"When running Edge Image Builder, a directory is mounted from the host, so it "
"is necessary to create a directory structure to to store the configuration "
"files used to define the target image."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:66
msgid ""
"`downstream-cluster-config.yaml` is the image definition file, see "
"<<quickstart-eib>> for more details."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:67
msgid ""
"The base image when downloaded is `xz` compressed, which must be "
"uncompressed with `unxz` and copied/moved under the `base-images` folder."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:68
msgid ""
"The `network` folder is optional, see <<metal3-add-network-eib>> for more "
"details."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:69
msgid ""
"The custom/scripts directory contains scripts to be run on first-boot; "
"currently a `growfs.sh` script is required to resize the OS root partition "
"on deployment"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:70
#, no-wrap
msgid ""
"├── downstream-cluster-config.yaml\n"
"├── base-images/\n"
"│   └ SLE-Micro.x86_64-5.5.0-Default-GM.raw\n"
"├── network/\n"
"|   └ configure-network.sh\n"
"└── custom/\n"
"    └ scripts/\n"
"        └ growfs.sh\n"
msgstr ""

#. type: Title =====
#: asciidoc/quickstart/metal3.adoc:71
#, no-wrap
msgid "Downstream cluster image definition file"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:72
msgid ""
"The `downstream-cluster-config.yaml` file is the main configuration file for "
"the downstream cluster image. The following is a minimal example for "
"deployment via Metal^3^:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:73
#, no-wrap
msgid ""
"apiVersion: 1.0\n"
"image:\n"
"  imageType: RAW\n"
"  arch: x86_64\n"
"  baseImage: SLE-Micro.x86_64-5.5.0-Default-GM.raw\n"
"  outputImageName: SLE-Micro-eib-output.raw\n"
"operatingSystem:\n"
"  kernelArgs:\n"
"    - ignition.platform.id=openstack\n"
"    - net.ifnames=1\n"
"  systemd:\n"
"    disable:\n"
"      - rebootmgr\n"
"  users:\n"
"    - username: root\n"
"      encryptedPassword: ${ROOT_PASSWORD}\n"
"      sshKeys:\n"
"      - ${USERKEY1}\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:74
msgid ""
"`$\\{ROOT_PASSWORD\\}` is the encrypted password for the root user, which "
"can be useful for test/debugging.  It can be generated with the `openssl "
"passwd -6 PASSWORD` command"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:75
msgid ""
"For the production environments, it is recommended to use the SSH keys that "
"can be added to the users block replacing the `$\\{USERKEY1\\}` with the "
"real SSH keys."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/metal3.adoc:76
msgid ""
"`net.ifnames=1` enables https://documentation.suse.com/smart/network/html/"
"network-interface-predictable-naming/index.html[Predictable Network "
"Interface Naming]"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/metal3.adoc:77
msgid ""
"This matches the default configuration for the metal3 chart, but the setting "
"must match the configured chart `predictableNicNames` value."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/metal3.adoc:78
msgid ""
"Also note `ignition.platform.id=openstack` is mandatory, without this "
"argument SLEMicro configuration via ignition will fail in the Metal^3^ "
"automated flow."
msgstr ""

#. type: Title =====
#: asciidoc/quickstart/metal3.adoc:79
#, no-wrap
msgid "Growfs script"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:80
msgid ""
"Currently is a custom script (`custom/scripts/growfs.sh`) which is required "
"to grow the file system to the match the disk size on first-boot after "
"provisioning. The `growfs.sh` script contains the following information:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:81
#, no-wrap
msgid ""
"#!/bin/bash\n"
"growfs() {\n"
"  mnt=\"$1\"\n"
"  dev=\"$(findmnt --fstab --target ${mnt} --evaluate --real --output SOURCE --noheadings)\"\n"
"  # /dev/sda3 -> /dev/sda, /dev/nvme0n1p3 -> /dev/nvme0n1\n"
"  parent_dev=\"/dev/$(lsblk --nodeps -rno PKNAME \"${dev}\")\"\n"
"  # Last number in the device name: /dev/nvme0n1p42 -> 42\n"
"  partnum=\"$(echo \"${dev}\" | sed 's/^.*[^0-9]\\([0-9]\\+\\)$/\\1/')\"\n"
"  ret=0\n"
"  growpart \"$parent_dev\" \"$partnum\" || ret=$?\n"
"  [ $ret -eq 0 ] || [ $ret -eq 1 ] || exit 1\n"
"  /usr/lib/systemd/systemd-growfs \"$mnt\"\n"
"}\n"
"growfs /\n"
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/metal3.adoc:82
msgid ""
"Add your own custom scripts to be executed during the provisioning process "
"using the same approach.  For more information, see <<quickstart-eib>>."
msgstr ""

#. type: delimited block =
#: asciidoc/quickstart/metal3.adoc:83
msgid ""
"The bug related to this workaround is https://bugzilla.suse.com/show_bug.cgi?"
"id=1217430"
msgstr ""

#. type: Title ====
#: asciidoc/quickstart/metal3.adoc:84
#, no-wrap
msgid "Image creation"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:85
msgid ""
"Once the directory structure is prepared following the previous sections, "
"run the following command to build the image:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:86
#, no-wrap
msgid ""
"podman run --rm --privileged -it -v $PWD:/eib \\\n"
" registry.suse.com/edge/edge-image-builder:1.0.2 \\\n"
" build --definition-file downstream-cluster-config.yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:87
msgid ""
"This creates the output image file named `SLE-Micro-eib-output.raw`, based "
"on the definition described above."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:88
msgid ""
"The output image must then be made available via a webserver, either the "
"media-server container enabled via the <<metal3-media-server,Metal^3^ "
"chart>> or some other locally accessible server.  In the examples below, we "
"refer to this server as `imagecache.local:8080`"
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:89
#, no-wrap
msgid "Adding BareMetalHost inventory"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:90
msgid ""
"Registering bare-metal servers for automated deployment requires creating "
"two resources: a Secret storing BMC access credentials and a Metal^3^ "
"BareMetalHost resource defining the BMC connection and other details:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:91
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: Secret\n"
"metadata:\n"
"  name: controlplane-0-credentials\n"
"type: Opaque\n"
"data:\n"
"  username: YWRtaW4=\n"
"  password: cGFzc3dvcmQ=\n"
"---\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:92
#, no-wrap
msgid ""
"apiVersion: metal3.io/v1alpha1\n"
"kind: BareMetalHost\n"
"metadata:\n"
"  name: controlplane-0\n"
"  labels:\n"
"    cluster-role: control-plane\n"
"spec:\n"
"  online: true\n"
"  bootMACAddress: \"00:f3:65:8a:a3:b0\"\n"
"  bmc:\n"
"    address: redfish-virtualmedia://192.168.125.1:8000/redfish/v1/Systems/68bd0fb6-d124-4d17-a904-cdf33efe83ab\n"
"    disableCertificateVerification: true\n"
"    credentialsName: controlplane-0-credentials\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:93
msgid "Note the following:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:94
msgid ""
"The Secret username/password must be base64 encoded. Note this should not "
"include any trailing newlines (for example, use `echo -n`, not just `echo`!)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:95
msgid ""
"The `cluster-role` label may be set now or later on cluster creation. In the "
"example below, we expect `control-plane` or `worker`"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:96
msgid ""
"`bootMACAddress` must be a valid MAC that matches the control plane NIC of "
"the host"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:97
msgid ""
"The `bmc` address is the connection to the BMC management API, the following "
"are supported:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:98
msgid ""
"`redfish-virtualmedia://<IP ADDRESS>/redfish/v1/Systems/<SYSTEM ID>`: "
"Redfish virtual media, for example, SuperMicro"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:99
msgid ""
"`idrac-virtualmedia://<IP ADDRESS>/redfish/v1/Systems/System.Embedded.1`: "
"Dell iDRAC"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:100
msgid ""
"See the https://github.com/metal3-io/baremetal-operator/blob/main/docs/api."
"md[Upstream API docs] for more details on the BareMetalHost API"
msgstr ""

#. type: Title ====
#: asciidoc/quickstart/metal3.adoc:101
#, no-wrap
msgid "Configuring Static IPs"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:102
msgid ""
"The BareMetalHost example above assumes DHCP provides the controlplane "
"network configuration, but for scenarios where manual configuration is "
"needed such as static IPs it is possible to provide additional "
"configuration, as described below."
msgstr ""

#. type: Title =====
#: asciidoc/quickstart/metal3.adoc:103
#, no-wrap
msgid "Additional script for static network configuration"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:104
msgid ""
"When creating the base image with Edge Image Builder, in the `network` "
"folder, create the following `configure-network.sh` file."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:105
msgid ""
"This consumes configuration drive data on first-boot, and configures the "
"host networking using the https://github.com/suse-edge/nm-configurator[NM "
"Configurator tool]."
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:106
#, no-wrap
msgid "#!/bin/bash\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:107
#, no-wrap
msgid "set -eux\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:108
#, no-wrap
msgid ""
"# Attempt to statically configure a NIC in the case where we find a network_data.json\n"
"# In a configuration drive\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:109
#, no-wrap
msgid ""
"CONFIG_DRIVE=$(blkid --label config-2 || true)\n"
"if [ -z \"${CONFIG_DRIVE}\" ]; then\n"
"  echo \"No config-2 device found, skipping network configuration\"\n"
"  exit 0\n"
"fi\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:110
#, no-wrap
msgid "mount -o ro $CONFIG_DRIVE /mnt\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:111
#, no-wrap
msgid "NETWORK_DATA_FILE=\"/mnt/openstack/latest/network_data.json\"\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:112
#, no-wrap
msgid ""
"if [ ! -f \"${NETWORK_DATA_FILE}\" ]; then\n"
"  umount /mnt\n"
"  echo \"No network_data.json found, skipping network configuration\"\n"
"  exit 0\n"
"fi\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:113
#, no-wrap
msgid "DESIRED_HOSTNAME=$(cat /mnt/openstack/latest/meta_data.json | tr ',{}' '\\n' | grep '\\\"metal3-name\\\"' | sed 's/.*\\\"metal3-name\\\": \\\"\\(.*\\)\\\"/\\1/')\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:114
#, no-wrap
msgid ""
"mkdir -p /tmp/nmc/{desired,generated}\n"
"cp ${NETWORK_DATA_FILE} /tmp/nmc/desired/${DESIRED_HOSTNAME}.yaml\n"
"umount /mnt\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:115
#, no-wrap
msgid ""
"./nmc generate --config-dir /tmp/nmc/desired --output-dir /tmp/nmc/generated\n"
"./nmc apply --config-dir /tmp/nmc/generated\n"
msgstr ""

#. type: Title =====
#: asciidoc/quickstart/metal3.adoc:116
#, no-wrap
msgid "Additional secret with host network configuration"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:117
msgid ""
"An additional secret containing data in the https://nmstate.io/[nmstate] "
"format supported by <<components-nmc,NM Configurator>> can be defined for "
"each host."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:118
msgid ""
"The secret is then referenced in the `BareMetalHost` resource via the "
"`preprovisioningNetworkDataName` spec field."
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:119
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: Secret\n"
"metadata:\n"
"  name: controlplane-0-networkdata\n"
"type: Opaque\n"
"stringData:\n"
"  networkData: |\n"
"    interfaces:\n"
"    - name: enp1s0\n"
"      type: ethernet\n"
"      state: up\n"
"      mac-address: \"00:f3:65:8a:a3:b0\"\n"
"      ipv4:\n"
"        address:\n"
"        - ip:  192.168.125.200\n"
"          prefix-length: 24\n"
"        enabled: true\n"
"        dhcp: false\n"
"    dns-resolver:\n"
"      config:\n"
"        server:\n"
"        - 192.168.125.1\n"
"    routes:\n"
"      config:\n"
"      - destination: 0.0.0.0/0\n"
"        next-hop-address: 192.168.125.1\n"
"        next-hop-interface: enp1s0\n"
"---\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:120
#, no-wrap
msgid ""
"apiVersion: metal3.io/v1alpha1\n"
"kind: BareMetalHost\n"
"metadata:\n"
"  name: controlplane-0\n"
"  labels:\n"
"    cluster-role: control-plane\n"
"spec:\n"
"  preprovisioningNetworkDataName: controlplane-0-networkdata\n"
"# Remaining content as in previous example\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:121
msgid ""
"although optional in the nmstate API, the mac-address is mandatory for "
"configuration via NM Configurator and must be provided."
msgstr ""

#. type: Title ====
#: asciidoc/quickstart/metal3.adoc:122
#, no-wrap
msgid "BareMetalHost preparation"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:123
msgid ""
"After creating the BareMetalHost resource and associated secrets as "
"described above, a host preparation workflow is triggered:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:124
msgid ""
"A ramdisk image is booted by virtualmedia attachment to the target host BMC"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:125
msgid ""
"The ramdisk inspects hardware details, and prepares the host for "
"provisioning (for example by cleaning disks of previous data)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:126
msgid ""
"On completion of this process, hardware details in the BareMetalHost `status."
"hardware` field are updated and can be verified"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:127
msgid ""
"This process can take several minutes, but when completed you should see the "
"BareMetalHost state become `available`:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:128
#, no-wrap
msgid ""
"% kubectl get baremetalhost\n"
"NAME             STATE       CONSUMER   ONLINE   ERROR   AGE\n"
"controlplane-0   available              true             9m44s\n"
"worker-0         available              true             9m44s\n"
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:129
#, no-wrap
msgid "Creating downstream clusters"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:130
msgid ""
"We now create Cluster API resources which define the downstream cluster, and "
"Machine resources which will cause the BareMetalHost resources to be "
"provisioned, then bootstrapped to form an RKE2 cluster."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:131
#, no-wrap
msgid "Control plane deployment"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:132
msgid ""
"To deploy the controlplane we define a yaml manifest similar to the one "
"below, which contains the following resources:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:133
msgid ""
"Cluster resource defines the cluster name, networks, and type of "
"controlplane/infrastructure provider (in this case RKE2/Metal3)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:134
msgid ""
"Metal3Cluster defines the controlplane endpoint (host IP for single-node, "
"LoadBalancer endpoint for multi-node, this example assumes single-node)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:135
msgid ""
"RKE2ControlPlane defines the RKE2 version and any additional configuration "
"needed during cluster bootstrapping"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:136 asciidoc/quickstart/metal3.adoc:151
msgid ""
"Metal3MachineTemplate defines the OS Image to be applied to the "
"BareMetalHost resources, and the hostSelector defines which BareMetalHosts "
"to consume"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:137 asciidoc/quickstart/metal3.adoc:152
msgid ""
"Metal3DataTemplate defines additional metaData to be passed to the "
"BareMetalHost (note networkData is not currently supported in the Edge "
"solution)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:138
msgid ""
"Note for simplicity this example assumes a single-node controlplane, where "
"the BareMetalHost is configured with an IP of `192.168.125.200` - for more "
"advanced multi-node examples please see the <<atip-automated-provisioning, "
"ATIP documentation>>"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:139
#, no-wrap
msgid ""
"apiVersion: cluster.x-k8s.io/v1beta1\n"
"kind: Cluster\n"
"metadata:\n"
"  name: sample-cluster\n"
"  namespace: default\n"
"spec:\n"
"  clusterNetwork:\n"
"    pods:\n"
"      cidrBlocks:\n"
"        - 192.168.0.0/18\n"
"    services:\n"
"      cidrBlocks:\n"
"        - 10.96.0.0/12\n"
"  controlPlaneRef:\n"
"    apiVersion: controlplane.cluster.x-k8s.io/v1alpha1\n"
"    kind: RKE2ControlPlane\n"
"    name: sample-cluster\n"
"  infrastructureRef:\n"
"    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n"
"    kind: Metal3Cluster\n"
"    name: sample-cluster\n"
"---\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:140
#, no-wrap
msgid ""
"apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n"
"kind: Metal3Cluster\n"
"metadata:\n"
"  name: sample-cluster\n"
"  namespace: default\n"
"spec:\n"
"  controlPlaneEndpoint:\n"
"    host: 192.168.125.200\n"
"    port: 6443\n"
"  noCloudProvider: true\n"
"---\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:141
#, no-wrap
msgid ""
"apiVersion: controlplane.cluster.x-k8s.io/v1alpha1\n"
"kind: RKE2ControlPlane\n"
"metadata:\n"
"  name: sample-cluster\n"
"  namespace: default\n"
"spec:\n"
"  infrastructureRef:\n"
"    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n"
"    kind: Metal3MachineTemplate\n"
"    name: sample-cluster-controlplane\n"
"  replicas: 1\n"
"  agentConfig:\n"
"    format: ignition\n"
"    kubelet:\n"
"      extraArgs:\n"
"        - provider-id=metal3://BAREMETALHOST_UUID\n"
"    additionalUserData:\n"
"      config: |\n"
"        variant: fcos\n"
"        version: 1.4.0\n"
"        systemd:\n"
"          units:\n"
"            - name: rke2-preinstall.service\n"
"              enabled: true\n"
"              contents: |\n"
"                [Unit]\n"
"                Description=rke2-preinstall\n"
"                Wants=network-online.target\n"
"                Before=rke2-install.service\n"
"                ConditionPathExists=!/run/cluster-api/bootstrap-success.complete\n"
"                [Service]\n"
"                Type=oneshot\n"
"                User=root\n"
"                ExecStartPre=/bin/sh -c \"mount -L config-2 /mnt\"\n"
"                ExecStart=/bin/sh -c \"sed -i \\\"s/BAREMETALHOST_UUID/$(jq -r .uuid /mnt/openstack/latest/meta_data.json)/\\\" /etc/rancher/rke2/config.yaml\"\n"
"                ExecStart=/bin/sh -c \"echo \\\"node-name: $(jq -r .name /mnt/openstack/latest/meta_data.json)\\\" >> /etc/rancher/rke2/config.yaml\"\n"
"                ExecStartPost=/bin/sh -c \"umount /mnt\"\n"
"                [Install]\n"
"                WantedBy=multi-user.target\n"
"    version: v1.28.9+rke2r1\n"
"---\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:142
#, no-wrap
msgid ""
"apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n"
"kind: Metal3MachineTemplate\n"
"metadata:\n"
"  name: sample-cluster-controlplane\n"
"  namespace: default\n"
"spec:\n"
"  template:\n"
"    spec:\n"
"      dataTemplate:\n"
"        name: sample-cluster-controlplane-template\n"
"      hostSelector:\n"
"        matchLabels:\n"
"          cluster-role: control-plane\n"
"      image:\n"
"        checksum: http://imagecache.local:8080/SLE-Micro-eib-output.raw.sha256\n"
"        checksumType: sha256\n"
"        format: raw\n"
"        url: http://imagecache.local:8080/SLE-Micro-eib-output.raw\n"
"---\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:143
#, no-wrap
msgid ""
"apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n"
"kind: Metal3DataTemplate\n"
"metadata:\n"
"  name: sample-cluster-controlplane-template\n"
"  namespace: default\n"
"spec:\n"
"  clusterName: sample-cluster\n"
"  metaData:\n"
"    objectNames:\n"
"      - key: name\n"
"        object: machine\n"
"      - key: local-hostname\n"
"        object: machine\n"
"      - key: local_hostname\n"
"        object: machine\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:144 asciidoc/quickstart/metal3.adoc:157
msgid ""
"When the example above has been copied and adapted to suit your environment, "
"it can be applied via `kubectl` then the cluster status can be monitored "
"with `clusterctl`"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:145
#, no-wrap
msgid "% kubectl apply -f rke2-control-plane.yaml\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:146
#, no-wrap
msgid ""
"# Wait for the cluster to be provisioned - status can be checked via clusterctl\n"
"% clusterctl describe cluster sample-cluster\n"
"NAME                                                    READY  SEVERITY  REASON  SINCE  MESSAGE\n"
"Cluster/sample-cluster                                  True                     22m\n"
"├─ClusterInfrastructure - Metal3Cluster/sample-cluster  True                     27m\n"
"├─ControlPlane - RKE2ControlPlane/sample-cluster        True                     22m\n"
"│ └─Machine/sample-cluster-chflc                        True                     23m\n"
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:147
#, no-wrap
msgid "Worker/Compute deployment"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:148
msgid ""
"Similar to the controlplane we define a yaml manifest, which contains the "
"following resources:"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:149
msgid ""
"MachineDeployment defines the number of replicas (hosts) and the bootstrap/"
"infrastructure provider (in this case RKE2/Metal3)"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:150
msgid ""
"RKE2ConfigTemplate describes the RKE2 version and first-boot configuration "
"for agent host bootstrapping"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:153
#, no-wrap
msgid ""
"apiVersion: cluster.x-k8s.io/v1beta1\n"
"kind: MachineDeployment\n"
"metadata:\n"
"  labels:\n"
"    cluster.x-k8s.io/cluster-name: sample-cluster\n"
"  name: sample-cluster\n"
"  namespace: default\n"
"spec:\n"
"  clusterName: sample-cluster\n"
"  replicas: 1\n"
"  selector:\n"
"    matchLabels:\n"
"      cluster.x-k8s.io/cluster-name: sample-cluster\n"
"  template:\n"
"    metadata:\n"
"      labels:\n"
"        cluster.x-k8s.io/cluster-name: sample-cluster\n"
"    spec:\n"
"      bootstrap:\n"
"        configRef:\n"
"          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1\n"
"          kind: RKE2ConfigTemplate\n"
"          name: sample-cluster-workers\n"
"      clusterName: sample-cluster\n"
"      infrastructureRef:\n"
"        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n"
"        kind: Metal3MachineTemplate\n"
"        name: sample-cluster-workers\n"
"      nodeDrainTimeout: 0s\n"
"      version: v1.28.9+rke2r1\n"
"---\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:154
#, no-wrap
msgid ""
"apiVersion: bootstrap.cluster.x-k8s.io/v1alpha1\n"
"kind: RKE2ConfigTemplate\n"
"metadata:\n"
"  name: sample-cluster-workers\n"
"  namespace: default\n"
"spec:\n"
"  template:\n"
"    spec:\n"
"      agentConfig:\n"
"        format: ignition\n"
"        version: v1.28.9+rke2r1\n"
"        kubelet:\n"
"          extraArgs:\n"
"            - provider-id=metal3://BAREMETALHOST_UUID\n"
"        additionalUserData:\n"
"          config: |\n"
"            variant: fcos\n"
"            version: 1.4.0\n"
"            systemd:\n"
"              units:\n"
"                - name: rke2-preinstall.service\n"
"                  enabled: true\n"
"                  contents: |\n"
"                    [Unit]\n"
"                    Description=rke2-preinstall\n"
"                    Wants=network-online.target\n"
"                    Before=rke2-install.service\n"
"                    ConditionPathExists=!/run/cluster-api/bootstrap-success.complete\n"
"                    [Service]\n"
"                    Type=oneshot\n"
"                    User=root\n"
"                    ExecStartPre=/bin/sh -c \"mount -L config-2 /mnt\"\n"
"                    ExecStart=/bin/sh -c \"sed -i \\\"s/BAREMETALHOST_UUID/$(jq -r .uuid /mnt/openstack/latest/meta_data.json)/\\\" /etc/rancher/rke2/config.yaml\"\n"
"                    ExecStart=/bin/sh -c \"echo \\\"node-name: $(jq -r .name /mnt/openstack/latest/meta_data.json)\\\" >> /etc/rancher/rke2/config.yaml\"\n"
"                    ExecStartPost=/bin/sh -c \"umount /mnt\"\n"
"                    [Install]\n"
"                    WantedBy=multi-user.target\n"
"---\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:155
#, no-wrap
msgid ""
"apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n"
"kind: Metal3MachineTemplate\n"
"metadata:\n"
"  name: sample-cluster-workers\n"
"  namespace: default\n"
"spec:\n"
"  template:\n"
"    spec:\n"
"      dataTemplate:\n"
"        name: sample-cluster-workers-template\n"
"      hostSelector:\n"
"        matchLabels:\n"
"          cluster-role: worker\n"
"      image:\n"
"        checksum: http://imagecache.local:8080/SLE-Micro-eib-output.raw.sha256\n"
"        checksumType: sha256\n"
"        format: raw\n"
"        url: http://imagecache.local:8080/SLE-Micro-eib-output.raw\n"
"---\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:156
#, no-wrap
msgid ""
"apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n"
"kind: Metal3DataTemplate\n"
"metadata:\n"
"  name: sample-cluster-workers-template\n"
"  namespace: default\n"
"spec:\n"
"  clusterName: sample-cluster\n"
"  metaData:\n"
"    objectNames:\n"
"      - key: name\n"
"        object: machine\n"
"      - key: local-hostname\n"
"        object: machine\n"
"      - key: local_hostname\n"
"        object: machine\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:158
#, no-wrap
msgid "% kubectl apply -f rke2-agent.yaml\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:159
#, no-wrap
msgid ""
"# Wait some time for the compute/agent hosts to be provisioned\n"
"% clusterctl describe cluster sample-cluster\n"
"NAME                                                    READY  SEVERITY  REASON  SINCE  MESSAGE\n"
"Cluster/sample-cluster                                  True                     25m\n"
"├─ClusterInfrastructure - Metal3Cluster/sample-cluster  True                     30m\n"
"├─ControlPlane - RKE2ControlPlane/sample-cluster        True                     25m\n"
"│ └─Machine/sample-cluster-chflc                        True                     27m\n"
"└─Workers\n"
"  └─MachineDeployment/sample-cluster                    True                     22m\n"
"    └─Machine/sample-cluster-56df5b4499-zfljj           True                     23m\n"
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:160
#, no-wrap
msgid "Cluster deprovisioning"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:161
msgid ""
"The downstream cluster may be deprovisioned by deleting the resources "
"applied in the creation steps above:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:162
#, no-wrap
msgid ""
"% kubectl delete -f rke2-agent.yaml\n"
"% kubectl delete -f rke2-control-plane.yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:163
msgid ""
"This triggers deprovisioning of the BareMetalHost resources, which may take "
"several minutes, after which they should be in available state again:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:164
#, no-wrap
msgid ""
"% kubectl get bmh\n"
"NAME             STATE            CONSUMER                            ONLINE   ERROR   AGE\n"
"controlplane-0   deprovisioning   sample-cluster-controlplane-vlrt6   false            10m\n"
"worker-0         deprovisioning   sample-cluster-workers-785x5        false            10m\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:165
#, no-wrap
msgid "...\n"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:166
#, no-wrap
msgid ""
"% kubectl get bmh\n"
"NAME             STATE       CONSUMER   ONLINE   ERROR   AGE\n"
"controlplane-0   available              false            15m\n"
"worker-0         available              false            15m\n"
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/metal3.adoc:167
#, no-wrap
msgid "Known issues"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:168
msgid ""
"The upstream https://github.com/metal3-io/ip-address-manager[IP Address "
"Management controller] is currently not supported, because it's not yet "
"compatible with our choice of network configuration tooling and first-boot "
"toolchain in SLEMicro."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:169
msgid ""
"Relatedly, the IPAM resources and Metal3DataTemplate networkData fields are "
"not currently supported."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:170
msgid "Only deployment via redfish-virtualmedia is currently supported."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:171
msgid "Deployed clusters are not currently imported into Rancher"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:172
msgid ""
"Due to disabling the Rancher embedded CAPI controller, a management cluster "
"configured for Metal^3^ as described above cannot also be used for other "
"cluster provisioning methods such as <<components-elemental, Elemental>>"
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/metal3.adoc:173
#, no-wrap
msgid "Planned changes"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:174
msgid ""
"Deployed clusters imported into Rancher, this is planned via https://turtles."
"docs.rancher.com/[Rancher Turtles] in future"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:175
msgid ""
"Aligning with Rancher Turtles is also expected to remove the requirement to "
"disable the Rancher embedded CAPI, so other cluster methods should be "
"possible via the management cluster."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:176
msgid ""
"Enable support of the IPAM resources and configuration via networkData fields"
msgstr ""

#. type: Title ==
#: asciidoc/quickstart/metal3.adoc:177
#, no-wrap
msgid "Additional resources"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:178
msgid ""
"The <<atip, ATIP Documentation>> has examples of more advanced usage of "
"Metal^3^ for telco use-cases."
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:179
#, no-wrap
msgid "Single-node configuration"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:180
msgid ""
"For test/PoC environments where the management cluster is a single node, it "
"is possible to avoid the requirement for an additional floating IP managed "
"via MetalLB."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:181
msgid ""
"In this mode, the endpoint for the management cluster APIs is the IP of the "
"management cluster, therefore it should be reserved when using DHCP or "
"statically configured to ensure the management cluster IP does not change - "
"referred to as `<MANAGEMENT_CLUSTER_IP>` below."
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:182
msgid ""
"To enable this scenario the metal3 chart values required are as follows:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:183
#, no-wrap
msgid ""
"global:\n"
"  ironicIP: <MANAGEMENT_CLUSTER_IP>\n"
"metal3-ironic:\n"
"  service:\n"
"    type: NodePort\n"
msgstr ""

#. type: Title ===
#: asciidoc/quickstart/metal3.adoc:184
#, no-wrap
msgid "Disabling TLS for virtualmedia ISO attachment"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:185
msgid ""
"Some server vendors verify the SSL connection when attaching virtual-media "
"ISO images to the BMC, which can cause a problem because the generated "
"certificates for the Metal3 deployment are self-signed, to work around this "
"issue it's possible to disable TLS only for the virtualmedia disk attachment "
"with metal3 chart values as follows:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:186
#, no-wrap
msgid ""
"global:\n"
"  enable_vmedia_tls: false\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:187
msgid ""
"An alternative solution is to configure the BMCs with the CA cert - in this "
"case you can read the certificates from the cluster using `kubectl`:"
msgstr ""

#. type: delimited block -
#: asciidoc/quickstart/metal3.adoc:188
#, no-wrap
msgid "kubectl get secret -n metal3-system ironic-vmedia-cert -o yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/quickstart/metal3.adoc:189
msgid ""
"The certificate can then be configured on the server BMC console, although "
"the process for that is vendor specific (and not possible for all vendors, "
"in which case the `enable_vmedia_tls` flag may be required)."
msgstr ""
