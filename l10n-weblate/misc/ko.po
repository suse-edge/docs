# Korean translations for PACKAGE package
# PACKAGE 패키지에 대한 한국어 번역문
# Copyright (C) 2024 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-07-23 11:17+0100\n"
"PO-Revision-Date: 2024-07-23 11:17+0100\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title =
#: asciidoc/misc/cluster-api-concepts.adoc:1
#, no-wrap
msgid "Cluster API core concepts"
msgstr ""

#. type: Plain text
#: asciidoc/misc/cluster-api-concepts.adoc:2
msgid "Via the https://cluster-api.sigs.k8s.io/[official docs]:"
msgstr ""

#. type: Plain text
#: asciidoc/misc/cluster-api-concepts.adoc:3
msgid ""
"Cluster API is a Kubernetes sub-project focused on providing declarative "
"APIs and tooling to simplify provisioning, upgrading, and operating multiple "
"Kubernetes clusters."
msgstr ""

#. type: Plain text
#: asciidoc/misc/cluster-api-concepts.adoc:4
msgid ""
"Started by the Kubernetes Special Interest Group (SIG) Cluster Lifecycle, "
"the Cluster API project uses Kubernetes-style APIs and patterns to automate "
"cluster lifecycle management for platform operators.  The supporting "
"infrastructure, like virtual machines, networks, load balancers, and VPCs, "
"as well as the Kubernetes cluster configuration are all defined in the same "
"way that application developers operate deploying and managing their "
"workloads.  This enables consistent and repeatable cluster deployments "
"across a wide variety of infrastructure environments."
msgstr ""

#. type: Title ==
#: asciidoc/misc/cluster-api-concepts.adoc:5
#, no-wrap
msgid "Cluster types"
msgstr ""

#. type: Title ===
#: asciidoc/misc/cluster-api-concepts.adoc:6
#, no-wrap
msgid "Management Cluster"
msgstr ""

#. type: Plain text
#: asciidoc/misc/cluster-api-concepts.adoc:7
msgid ""
"A _Management_ cluster manages the state and lifecycle of _Workload_ "
"clusters using components called providers.  Each Management cluster stores "
"and reconciles the Cluster API resources (e.g. Machine, MachineDeployment, "
"etc.)  of Workload clusters by running one or more providers."
msgstr ""

#. type: Title ===
#: asciidoc/misc/cluster-api-concepts.adoc:8
#, no-wrap
msgid "Workload Cluster"
msgstr ""

#. type: Plain text
#: asciidoc/misc/cluster-api-concepts.adoc:9
msgid ""
"_Workload_ clusters, as the name suggests, are used to run and orchestrate "
"the application workloads of the user.  Workload clusters, in the context of "
"Cluster API, are always managed by a Management cluster."
msgstr ""

#. type: Title ==
#: asciidoc/misc/cluster-api-concepts.adoc:10
#, no-wrap
msgid "Providers"
msgstr ""

#. type: Title ===
#: asciidoc/misc/cluster-api-concepts.adoc:11
#, no-wrap
msgid "Infrastructure Provider"
msgstr ""

#. type: Plain text
#: asciidoc/misc/cluster-api-concepts.adoc:12
msgid ""
"Infrastructure providers are responsible for provisioning the necessary "
"infrastructure and compute resources.  Each node, regardless of its type (e."
"g. a VM or bare metal), requires specific configuration options which these "
"providers use during the provisioning process e.g. OS image and checksum, "
"network settings, etc."
msgstr ""

#. type: Plain text
#: asciidoc/misc/cluster-api-concepts.adoc:13
msgid ""
"A popular and widely adopted bare metal infrastructure provider is the "
"https://github.com/metal3-io/cluster-api-provider-metal3[CAPM3] project "
"(Cluster API Provider Metal³).  It enables users to deploy a Cluster API "
"based cluster using Metal3."
msgstr ""

#. type: Title ===
#: asciidoc/misc/cluster-api-concepts.adoc:14
#, no-wrap
msgid "Bootstrap Provider"
msgstr ""

#. type: Plain text
#: asciidoc/misc/cluster-api-concepts.adoc:15
msgid ""
"Bootstrap providers are responsible for turning a fully provisioned server "
"into a Kubernetes node.  This includes, but is not limited to, configuring, "
"initializing and joining control plane and worker nodes, generating "
"kubeconfig and cluster certificates, etc."
msgstr ""

#. type: Plain text
#: asciidoc/misc/cluster-api-concepts.adoc:16
msgid ""
"The https://github.com/rancher-sandbox/cluster-api-provider-rke2/[CAPRKE2] "
"project (Cluster API Provider RKE2) aims to provide both Control Plane and "
"Bootstrap providers for RKE2 based clusters.  It is currently in early "
"development by the Rancher team."
msgstr ""

#. type: Title =
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:1
#, no-wrap
msgid "Create a simple container image based on Tumbleweed using OBS (openSUSE Build Service)"
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:2
#, no-wrap
msgid "Create the project to host the assets"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:3
msgid "In this case it will be a _subproject_ of the \"home:foobar\" project"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:4
msgid "Go to https://build.opensuse.org/"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:5
msgid "Log in"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:6
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:11
msgid "Select \"Your Home Project\" (Left Nav menu)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:7
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:12
msgid "Select the \"Subprojects\" tab"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:8
msgid "Press \"Create Subproject\" (In Left Nav menu);"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:9
msgid "Fill in the name (e.g. containers)."
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:10
#, no-wrap
msgid "Enable container builds in the project config"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:13
msgid "Select the subproject you have created (e.g. containers)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:14
msgid "Select the \"Project Config\" tab"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:15
msgid "Paste the following code:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:16
#, no-wrap
msgid ""
"%if \"%_repository\" == \"images\"\n"
"Type: docker\n"
"Repotype: none\n"
"Patterntype: none\n"
"BuildEngine: podman\n"
"%endif\n"
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:17
#, no-wrap
msgid "Add the Tumbleweed images repository"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:18
msgid ""
"Go to the subproject home page (e.g. https://build.opensuse.org/repositories/"
"home:foobar:containers)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:19
msgid "Select the \"Repositories\" tab"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:20
msgid "Press the \"Add from a Project\" button"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:21
msgid "Fill in \"Project\" field with `openSUSE:Templates:Images:Tumbleweed``"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:22
msgid "Choose \"images\" in Repositories dropdown"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:23
msgid ""
"Rename it as \"images\" (this is important as it will be later on used in "
"the registry path)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:24
msgid "Unselect all the architectures you don't need"
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:25
#, no-wrap
msgid "Create a package for the subproject"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:26
msgid "Go to https://build.opensuse.org/project/show/home:foobar:containers"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:27
msgid "Press \"Create Package\" button"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:28
msgid "Fill in the name (e.g. mytoolbox)."
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:29
#, no-wrap
msgid "Create the Dockerfile"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:30
msgid "Create a simple Dockerfile locally, something like:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:31
#, no-wrap
msgid ""
"# The container image tag needs to be specified as follows:\n"
"#!BuildTag: mytoolbox:latest\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:32
#, no-wrap
msgid ""
"FROM opensuse/tumbleweed\n"
"RUN zypper -n in traceroute iputils netcat-openbsd curl && \\\n"
"    zypper clean -a\n"
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:33
#, no-wrap
msgid "Upload the Dockerfile"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:34
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:38
msgid ""
"Go to https://build.opensuse.org/package/show/home:foobar:containers/"
"mytoolbox"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:35
msgid "Press the \"Add File\" button"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:36
msgid "Choose the file and upload it"
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:37
#, no-wrap
msgid "Build results"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:39
msgid "Images will appear in Build Results section"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:40
msgid "Press the \"Refresh\" button in Build Results section"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:41
msgid "Wait for build results."
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:42
#, no-wrap
msgid "Resulting images"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:43
msgid ""
"If everything went as it should, the container image will be hosted at the "
"https://registry.opensuse.org/[openSUSE registry]"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:44
msgid "Go to https://registry.opensuse.org/"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:45
msgid "On the search bar, type \"project={caret}home:foobar:\" and press enter"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:46
msgid ""
"Click on the package icon or name (home/foobar/containers/images/mytoolbox)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:47
msgid ""
"Expand the tag (latest) to see the Image IDs, arch, build time, etc as well "
"as the `podman pull` command."
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:48
#, no-wrap
msgid "Modify the Dockerfile file via CLI"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:49
msgid ""
"Install `osc` via your favourite package manager (see https://en.opensuse."
"org/openSUSE:OSC)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:50
msgid ""
"Run `osc checkout home:foobar:containers`. It will ask your username/"
"password and a method to store the password safely."
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:51
msgid ""
"Navigate to the downloaded project `cd home\\:foobar\\:containers/mytoolbox/`"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:52
msgid "Edit the `Dockerfile` as needed"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:53
msgid "Run `osc commit` and put a proper commit message"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-simple-container-image-obs.adoc:54
msgid "The build will be automatically triggered"
msgstr ""

#. type: Title =
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:1
#, no-wrap
msgid "Create a custom single-iso image"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:2
msgid ""
"The feature to create a single iso (installer image and combustion) to be "
"used by Virtual CD-Rom, will be added to the SLE Micro 5.5 release.  When "
"the SLE Micro 5.5 is released, or if you want to use the existing https://"
"build.opensuse.org/project/show/home:amorgante:branches:SUSE:SLE-15-SP4:"
"Update:Products:Micro54[build] created in this guide, we will be able to "
"create a single-iso image with the combustion script included just following "
"the last part of this document <<download-iso,here>>."
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:3
msgid ""
"Meanwhile, we could use this workaround to create a single-iso image in "
"order to modify the combustion package to add some lines to detect the CD-"
"Rom properly executing the combustion after installing the SLE Micro image."
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:4
msgid "To do that we can follow the next steps:"
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:5
#, no-wrap
msgid "Clone the SLE Micro installer repository from OBS"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:6
msgid "Log in to https://build.opensuse.org[OBS]"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:7
msgid ""
"Go to the https://build.opensuse.org/project/show/SUSE:SLE-15-SP4:Update:"
"Products:Micro54[SLE Micro installer repository]"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:8
msgid ""
"Create a branch from this project to link 2 packages (`combustion` and `SLE-"
"Micro`) to modify the combustion package to add some extra code. Then we "
"need to link the SLE Micro image to be able to build a new image with the "
"combustion package modified."
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:9
msgid ""
"To create the link between the two packages, go to the `Meta` tab and then "
"add the next lines:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:10
#, no-wrap
msgid ""
"<repository name=\"standard\">\n"
"  <path project=\"SUSE:SLE-15-SP4:Update:Products:Micro54\" repository=\"standard\"/>\n"
"  <arch>aarch64</arch>\n"
"  <arch>ppc64le</arch>\n"
"  <arch>s390x</arch>\n"
"  <arch>x86_64</arch>\n"
"</repository>\n"
"<repository name=\"images\" rebuild=\"local\">\n"
"  <path project=\"home:<user>:branches:SUSE:SLE-15-SP4:Update:Products:Micro54\" repository=\"standard\"/>\n"
"  <arch>x86_64</arch>\n"
"</repository>\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:11
msgid "After that click on `Save` and then you should see something like:"
msgstr ""

#. type: Target for macro image
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:12
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:13
#, no-wrap
msgid "obs-single-iso.png"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:14
msgid ""
"Now, for any modification to the combustion package, the SLE Micro image "
"will be automatically rebuilt with the new combustion package changes."
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:15
#, no-wrap
msgid "Modify the combustion package"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:16
msgid ""
"To modify the combustion package, we need to go to the `combustion` package "
"and then download the next file:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:17
#, no-wrap
msgid ""
"osc getbinaries home:<user>:branches:SUSE:SLE-15-SP4:Update:Products:Micro54 \\\n"
" combustion standard x86_64 combustion-1.0+git2.obscpio\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:18
msgid ""
"This file contains the combustion image that will be used by the SLE Micro "
"installer to create the final image."
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:19
msgid ""
"To extract the content of this file, we need to execute the next command:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:20
#, no-wrap
msgid "cpio -idmv < combustion-1.0+git2.obscpio\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:21
msgid "After that, we should see something like:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:22
#, no-wrap
msgid ""
"$ ls -l\n"
"total 68\n"
"drwxr-xr-x   4096 sep 14 13:20 .\n"
"drwx------.  4096 sep 14 13:20 ..\n"
"-rw-r--r--   6064 sep 12 16:09 combustion\n"
"-rw-r--r--    512 sep 12 16:07 combustion-1.0+git2.obscpio\n"
"-rw-r--r--   1032 sep 12 16:07 combustion-prepare.service\n"
"-rw-r--r--   1488 sep 12 16:07 combustion.rules\n"
"-rw-r--r--   1009 sep 12 16:07 combustion.service\n"
"-rw-r--r--  18092 sep 12 16:07 LICENSE\n"
"-rw-r--r--    408 sep 12 16:07 Makefile\n"
"-rw-r--r--   1240 sep 14 13:20 module-setup.sh\n"
"-rw-r--r--   4686 sep 12 16:07 README.md\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:23
msgid "Let's change the next things:"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:24
msgid "*Timeout* to wait for the config drive from 10 to 15 seconds"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:25
#, no-wrap
msgid "sed -i 's/devtimeout=10/devtimeout=15/g' module-setup.sh\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:26
msgid ""
"*Combustion labels* to be able to mount the config drive adding the labels "
"`install` and `INSTALL`"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:27
#, no-wrap
msgid ""
"...\n"
"...\n"
"for label in combustion COMBUSTION ignition IGNITION install INSTALL; do\n"
"...\n"
"...\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:28
msgid ""
"After changing the code, we need to create a new `combustion-1.0+git2."
"obscpio` file:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:29
#, no-wrap
msgid "find combustion-1.0+git2 -type f -print | cpio -ocv > combustion-1.0+git2.obscpio\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:30
msgid ""
"And upload again to the combustion package OBS to build a new package with "
"the modifications"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:31
#, no-wrap
msgid ""
"osc add combustion-1.0+git2.obscpio\n"
"osc commit -m \"Update combustion-1.0+git2.obscpio\"\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:32
msgid "After that you should see a new build is running:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:33
#, no-wrap
msgid "osc results\n"
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:34
#, no-wrap
msgid "Build a new SLE Micro OBS custom image with the new combustion package modified"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:35
msgid ""
"After the combustion package is built, we need to rebuild a new SLE Micro "
"image with the new combustion package."
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:36
msgid ""
"To do that you can go to the `SLE-Micro` package and then click on `Trigger "
"Rebuild` and then select the `images` repository and then click on `Trigger "
"Rebuild` again.  Another easier option to do that, is to modify the `SLE-"
"Micro.changes` to add some information about the new combustion changes and "
"then commit the changes and then the image will be automatically rebuilt."
msgstr ""

#. type: Title ==
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:37
#, no-wrap
msgid "Download the new iso image to prepare it with xorriso and adding combustion"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:38
msgid ""
"After the image is built, we need to download the new iso image to prepare "
"it with `xorriso` and adding combustion.  To do that, we need to go to the "
"`images` repository and then download the new iso image."
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:39
msgid ""
"Now, we should have the next files to generate the final `single-iso` image:"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:40
msgid "Input:"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:41
msgid ""
"SLE-Micro.x86_64-5.4.0-Default-SelfInstall-Build15.1.install.iso (This is "
"the new build image with the combustion package modified)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:42
msgid "combustion folder with the next structure:"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:43
msgid ""
"./script (this is the combustion script with the tasks we want to execute "
"during the installation in the combustion phase)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:44
msgid "Output:"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:45
msgid ""
"SLE-Micro-Selfinstall-with-mycombustion-single-iso.iso (This is the final "
"single-iso image with the combustion script included and the installer iso "
"image)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:46
msgid "Using `xorriso` we will create the final single-iso:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:47
#, no-wrap
msgid ""
"xorriso -indev ./SLE-Micro.x86_64-5.4.0-Default-SelfInstall-Build15.1.install.iso \\\n"
" -outdev ./SLE-Micro-Selfinstall-with-mycombustion-single-iso.iso \\\n"
" -map ~/my-local-path/combustion /combustion \\\n"
" -boot_image any replay -changes_pending yes\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/create-a-single-iso-image-customized.adoc:48
msgid ""
"After that, we should have the final iso image with the combustion script "
"included `SLE-Micro-Selfinstall-with-mycombustion-single-iso.iso`"
msgstr ""

#. type: Title =
#: asciidoc/misc/modify-sle-micro-iso.adoc:1
#, no-wrap
msgid "Modify a SLE Micro ISO (or any SLE ISO)"
msgstr ""

#. type: delimited block =
#: asciidoc/misc/modify-sle-micro-iso.adoc:2
msgid ""
"This is totally unsupported. Via https://github.com/rancher/elemental/blob/"
"c00c34268572572f4bc2131c0121f6d8b5712942/.github/elemental-iso-add-"
"registration#L62[elemental-iso-add-registration]."
msgstr ""

#. type: Title ==
#: asciidoc/misc/modify-sle-micro-iso.adoc:3
#, no-wrap
msgid "Requirements"
msgstr ""

#. type: Plain text
#: asciidoc/misc/modify-sle-micro-iso.adoc:4
msgid "SLE Micro ISO (or any SLE ISO)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/modify-sle-micro-iso.adoc:5
msgid ""
"https://www.gnu.org/software/xorriso/[xorriso]. It can be installed with "
"https://software.opensuse.org/package/xorriso[`zypper`] or via the `registry."
"opensuse.org/isv/rancher/elemental/stable/teal53/15.4/rancher/elemental-"
"builder-image/5.3:latest` container image."
msgstr ""

#. type: Title ==
#: asciidoc/misc/modify-sle-micro-iso.adoc:6
#, no-wrap
msgid "Usage"
msgstr ""

#. type: Plain text
#: asciidoc/misc/modify-sle-micro-iso.adoc:7
msgid ""
"Imagine you want to modify the `/boot/grub2/grub.cfg` file. You just need to:"
msgstr ""

#. type: Plain text
#: asciidoc/misc/modify-sle-micro-iso.adoc:8
msgid "mount the ISO somewhere"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/modify-sle-micro-iso.adoc:9
#, no-wrap
msgid ""
"ISO=${${HOME}/SLE-Micro.x86_64-5.4.0-Default-SelfInstall-GM.install.iso}\n"
"DIR=$(mktemp -d)\n"
"sudo mount ${ISO} ${DIR}\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/modify-sle-micro-iso.adoc:10
msgid "extract the file"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/modify-sle-micro-iso.adoc:11
#, no-wrap
msgid "cp ${DIR}/boot/grub2/grub.cfg /tmp/mygrub.cfg\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/modify-sle-micro-iso.adoc:12
msgid "perform the modifications as needed"
msgstr ""

#. type: Plain text
#: asciidoc/misc/modify-sle-micro-iso.adoc:13
msgid "Umount the ISO (not really needed)"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/modify-sle-micro-iso.adoc:14
#, no-wrap
msgid ""
"sudo umount ${DIR}\n"
"rmdir ${DIR}\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/modify-sle-micro-iso.adoc:15
msgid "rebuild the ISO as"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/modify-sle-micro-iso.adoc:16
#, no-wrap
msgid ""
"xorriso -indev ${ISO} -outdev SLE-Micro-tweaked.iso -map /tmp/mygrub.cfg \\\n"
" /boot/grub2/grub.cfg -boot_image any replay\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/modify-sle-micro-iso.adoc:17
#, no-wrap
msgid "xorriso 1.4.6 : RockRidge filesystem manipulator, libburnia project.\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/modify-sle-micro-iso.adoc:18
#, no-wrap
msgid ""
"xorriso : NOTE : ISO image bears MBR with  -boot_image any partition_offset=16\n"
"xorriso : NOTE : Loading ISO image tree from LBA 0\n"
"xorriso : UPDATE : 371 nodes read in 1 seconds\n"
"libisofs: WARNING : Found hidden El-Torito image. Its size could not be\n"
" figured out, so image modify or boot image patching may lead to bad results.\n"
"xorriso : NOTE : Detected El-Torito boot information which currently is set to\n"
"  be discarded\n"
"Drive current: -indev './SLE-Micro.x86_64-5.4.0-Default-RT-SelfInstall-GM.install.iso'\n"
"Media current: stdio file, overwriteable\n"
"Media status : is written , is appendable\n"
"Boot record  : El Torito , MBR grub2-mbr cyl-align-off\n"
"Media summary: 1 session, 494584 data blocks,  966m data,  114g free\n"
"Volume id    : 'INSTALL'\n"
"Drive current: -outdev 'SLE-Micro-tweaked.iso'\n"
"Media current: stdio file, overwriteable\n"
"Media status : is blank\n"
"Media summary: 0 sessions, 0 data blocks, 0 data,  114g free\n"
"xorriso : UPDATE : 1 files added in 1 seconds\n"
"Added to ISO image: file '/boot/grub2/grub.cfg'='/tmp/mygrub.cfg'\n"
"xorriso : NOTE : Replayed 21 boot related commands\n"
"xorriso : NOTE : Copying to System Area: 32768 bytes from file\n"
" '--interval:imported_iso:0s-15s:zero_mbrpt:./SLE-Micro.x86_64-5.4.0-Default-RT-SelfInstall-GM.install.iso'\n"
"xorriso : NOTE : Preserving in ISO image: -boot_image any partition_offset=16\n"
"xorriso : UPDATE : Writing:      32768s    6.5%   fifo 100%  buf  50%\n"
"xorriso : UPDATE : Writing:      67205s   13.3%   fifo  96%  buf  50%\n"
"xorriso : UPDATE : Writing:     442368s   87.6%   fifo 100%  buf  50%  553.8xD\n"
"ISO image produced: 504777 sectors\n"
"Written to medium : 504784 sectors at LBA 48\n"
"Writing to 'SLE-Micro-tweaked.iso' completed successfully.\n"
msgstr ""

#. type: Title =
#: asciidoc/misc/rancher-disambiguation.adoc:1
#, no-wrap
msgid "Rancher portfolio disambiguation"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:2
msgid ""
"https://www.rancher.com/[Rancher] ecosystem host a few projects under its "
"umbrella. For newcomers it may be not easy to have a clear picture on the "
"different products and projects. This is a humble attempt to clarify it."
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:3
msgid ""
"RKE1, RKE2 and K3s are flavours of Kubernetes, Rancher Manager can be used "
"to manage and provision different deployments of Kubernetes itself with a "
"primary focus on RKE1/RKE2, Fleet can watch Git Repositories, detect changes "
"and tell Kubernetes what it needs to be running, Elemental considers a "
"specific approach to provisioning Kubernetes in Edge scenarios where the "
"provisioning can be preloaded at the OS level for Rancher Manager to control "
"later"
msgstr ""

#. type: Title ==
#: asciidoc/misc/rancher-disambiguation.adoc:4
#, no-wrap
msgid "Rancher"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:5
msgid ""
"https://www.rancher.com/products/rancher[Rancher] (or Rancher Manager) is a "
"multi cluster management solution for provisioning, managing and accessing "
"multiple downstream kubernetes clusters.  To provision new clusters Rancher "
"can interact with different infrastructure and virtualization tools (vSphere/"
"AWS etc) as an api client, request VMs and networks and setup a kubernetes "
"cluster inside of those, it also works with bare metal machines by "
"generating an join command you an run each time."
msgstr ""

#. type: Title ==
#: asciidoc/misc/rancher-disambiguation.adoc:6
#, no-wrap
msgid "Fleet"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:7
msgid ""
"https://fleet.rancher.io/[Fleet] is usually a component of https://www."
"rancher.com/products/rancher[Rancher] (although it can be used "
"independently) that allows you to use a GitOps workflow for multi-cluster (i."
"e it allows you to define your git repositories and the clusters they should "
"apply to at the management cluster level)."
msgstr ""

#. type: Title ==
#: asciidoc/misc/rancher-disambiguation.adoc:8
#, no-wrap
msgid "Elemental"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:9
msgid ""
"https://elemental.docs.rancher.com/[Elemental] is a way to automatically "
"deploy/register new clusters and manage the OS of their node, you can define "
"clusters and their nodes on the management cluster then generate an OS "
"installer image, when booting your node from that image it will install the "
"node, register it to the manager and configure it for its role in the local "
"cluster. This is the SUSE/Rancher way of doing zero touch provisioning.  "
"Elemental takes a different view of cluster provisioning focused on Edge "
"deployments, typically Rancher services datacenter deployments of Kubernetes "
"with enterprise servers etc; in an Edge scenario e.g. factory or cruise ship "
"theres no guarantee of access for Rancher to contact and provision a cluster "
"directly (i.e. limited bandwidth, firewalls etc) - Elemental instead is used "
"to preload an operating system with all the information needed to set the "
"cluster up, you can install that into the servers that you want to cluster "
"and then it will reach back to Rancher to be under management at that point"
msgstr ""

#. type: Title ==
#: asciidoc/misc/rancher-disambiguation.adoc:10
#, no-wrap
msgid "Kubernetes"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:11
msgid ""
"https://kubernetes.io/[Kubernetes] as a standard and core technology is "
"really a cross industry effort like Linux and has become core to DevOps as a "
"cultural movement - as it enables defining and deploying your infrastructure "
"as code and with lots of automation for extensive business continuity and "
"high availability"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:12
msgid ""
"Kubernetes is a receptacle though - it runs what you tell it to run, usually "
"people use automation to tell it what to do and this requires some kind of "
"application to detect application configuration and apply it to Kubernetes - "
"usually this is fulfilled through developer pipelines (CI/CD) where things "
"are deployed as they are developed"
msgstr ""

#. type: Title ==
#: asciidoc/misc/rancher-disambiguation.adoc:13
#, no-wrap
msgid "Kubernetes distributions"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:14
msgid ""
"Kubernetes Distributions, like Linux OSes, come in different flavours, RKE "
"and RKE2 are two different flavours of Kubernetes in this manner; but like "
"Ubuntu vs SUSE do for an OS they are ultimately just packaging an "
"implementation of Kubernetes. Other examples include EKS,AKS and GKE which "
"are flavours produced by AWS, Azure and GCP respectively. When we say a "
"kubernetes cluster we mean a specific instance of a distribution installed "
"on servers that are managed as a group (each server being a node in the "
"cluster)"
msgstr ""

#. type: Title ==
#: asciidoc/misc/rancher-disambiguation.adoc:15
#, no-wrap
msgid "K3Ss"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:16
msgid ""
"https://docs.k3s.io/[K3s] is a fully compliant and lightweight Kubernetes "
"distribution focused on Edge, IoT, ARM or just for situations where a PhD in "
"K8s clusterology is infeasible"
msgstr ""

#. type: Title ==
#: asciidoc/misc/rancher-disambiguation.adoc:17
#, no-wrap
msgid "RKE (or RKE1)"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:18
msgid ""
"https://www.rancher.com/products/rke[Rancher Kubernetes Engine] is a "
"Kubernetes distribution that uses an older architecture and relies on Docker "
"Engine to run containers"
msgstr ""

#. type: Title ==
#: asciidoc/misc/rancher-disambiguation.adoc:19
#, no-wrap
msgid "RKE2"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:20
msgid ""
"https://docs.rke2.io/[RKE2] also known as RKE Government, is Rancher's next-"
"generation Kubernetes distribution that uses a newer architecture based on "
"ContainerD.  RKE2 combines the best-of-both-worlds from the 1.x version of "
"RKE (hereafter referred to as RKE1) anxd K3s.  From K3s, it inherits the "
"usability, ease-of-operations, and deployment model.  From RKE1, it inherits "
"close alignment with upstream Kubernetes. In places K3s has diverged from "
"upstream Kubernetes in order to optimize for edge deployments, but RKE1 and "
"RKE2 can stay closely aligned with upstream."
msgstr ""

#. type: Title ==
#: asciidoc/misc/rancher-disambiguation.adoc:21
#, no-wrap
msgid "RKE2 using Air-gap install"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:22
msgid ""
"https://docs.rke2.io/install/airgap[air-gap install] is an RKE2 Installation "
"where all package dependencies are installed using two different methods. "
"Using the tarball release 'rke2-airgap-images' or by using a private "
"registry and passing the parameter 'system-default-registry' during the "
"installation to point directly to the private registry where images are "
"located (as a mirror for docker.io)"
msgstr ""

#. type: Title ==
#: asciidoc/misc/rancher-disambiguation.adoc:23
#, no-wrap
msgid "Rancher vs K3s vs RKE"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rancher-disambiguation.adoc:24
msgid ""
"You don't need Rancher to set up K3s or RKE1 or RKE2 on their own it just "
"makes the whole process easier.  Rancher runs as a Management Interface that "
"can interact with running clusters and also provision new clusters - as well "
"as manage authentication to the downstream clusters, and it can also do "
"other things like interact with applications that kubernetes is "
"orchestrating and provides monitoring tools"
msgstr ""

#. type: Title =
#: asciidoc/misc/rke2-selinux.adoc:1
#, no-wrap
msgid "Deploying an RKE2 cluster with SELinux enabled"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:2
msgid ""
"`SELinux`, or Security-Enhanced Linux, is a security framework for Linux "
"operating systems that provides an additional layer of access control and "
"mandatory access controls (`MAC`) beyond the traditional discretionary "
"access controls (`DAC`). Developed by the National Security Agency (`NSA`) "
"in collaboration with the open-source community, `SELinux` aims to enforce "
"fine-grained control over processes, files, and system resources to enhance "
"the overall security of the system."
msgstr ""

#. type: Title ==
#: asciidoc/misc/rke2-selinux.adoc:3
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:2
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:4
msgid ""
"one VM. Hint https://suse-edge.github.io/docs/quickstart/slemicro-utm-"
"aarch64[SLE Micro on OSX on Apple Silicon (UTM)] or https://suse-edge.github."
"io/docs/quickstart/slemicro-virt-install-x86_64[SLE Micro on X86_64 on "
"libvirt (virt-install)] can be used as the base platform for validation "
"here, but these instructions should work on any SLE Micro based system."
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:5
msgid ""
"The VM should meet the https://docs.rke2.io/install/"
"requirements#linuxwindows[RKE2 requirements]."
msgstr ""

#. type: Title ==
#: asciidoc/misc/rke2-selinux.adoc:6
#, no-wrap
msgid "Installation"
msgstr ""

#. type: Title ===
#: asciidoc/misc/rke2-selinux.adoc:7
#, no-wrap
msgid "Installation on the x86-64 architecture"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:8
msgid ""
"Once we've got the VM started and running, let's prepare the config to "
"enable SELinux mode in the RKE2 configuration file:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:9
#, no-wrap
msgid ""
"mkdir -p /etc/rancher/rke2 && echo \"selinux: true\" \\\n"
" >> /etc/rancher/rke2/config.yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:10
msgid "Install RKE2 cluster"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:11
#, no-wrap
msgid ""
"curl -sfL https://get.rke2.io | INSTALL_RKE2_CHANNEL=stable \\\n"
" INSTALL_RKE2_METHOD=rpm RKE2_SELINUX=true sh -\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:12
#, no-wrap
msgid ""
"# Enable and Start RKE2\n"
"systemctl enable rke2-server.service\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:13 asciidoc/misc/rke2-selinux.adoc:24
msgid ""
"Now, the VM should be rebooted for the transactional-update to finish "
"properly:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:14 asciidoc/misc/rke2-selinux.adoc:25
#, no-wrap
msgid "reboot\n"
msgstr ""

#. type: Title ===
#: asciidoc/misc/rke2-selinux.adoc:15
#, no-wrap
msgid "Installation on the arm64 architecture"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:16
msgid ""
"As there are no RPM builds for RKE2 on `arm64` architecture, the `tarball` "
"method will be used and the `rke2-selinux` policy will be installed manually."
msgstr ""

#. type: Title ====
#: asciidoc/misc/rke2-selinux.adoc:17
#, no-wrap
msgid "Install rke2-selinux"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:18
msgid ""
"The first thing that will be installed is the https://github.com/rancher/"
"rke2-selinux[rke2-selinux] policy."
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:19 asciidoc/misc/rke2-selinux.adoc:31
msgid "Let's connect to the VM and run:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:20
#, no-wrap
msgid ""
"cat >> install-selinux.sh << 'END'\n"
"#!/bin/bash\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:21
#, no-wrap
msgid ""
"# Install rpm-testing.rancher.io repository key and the rke2-selinux package\n"
"mkdir -p /var/lib/rpm-state\n"
"curl -o /root/public.key https://rpm-testing.rancher.io/public.key\n"
"curl -L -o /root/rke2-selinux.rpm https://github.com/rancher/rke2-selinux/releases/download/v0.15.testing.1/rke2-selinux-0.15-1.slemicro.noarch.rpm\n"
"rpmkeys --import /root/public.key\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:22
#, no-wrap
msgid ""
"# Install RKE2 with SELinux\n"
"zypper install -y /root/rke2-selinux.rpm\n"
"END\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:23
#, no-wrap
msgid "chmod +x install-selinux.sh && transactional-update run /root/install-selinux.sh\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:26
msgid ""
"After restarting the VM, we can verify that the policy was successfully "
"installed as follows:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:27
#, no-wrap
msgid "rpm -qa | grep rke2\n"
msgstr ""

#. type: Title ====
#: asciidoc/misc/rke2-selinux.adoc:28
#, no-wrap
msgid "Install RKE2"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:29
msgid ""
"As a second step, an RKE2 cluster will be installed, which will use the "
"policy installed in the previous section."
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:30
msgid ""
"As the `rke2-policy` was installed manually on the VM, some of its paths may "
"not be created correctly, so the following commands will ensure that all the "
"paths are fine."
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:32
#, no-wrap
msgid ""
"mkdir -p /var/lib/cni\n"
"mkdir -p /opt/cni\n"
"mkdir -p /var/lib/kubelet/pods\n"
"mkdir -p /var/lib/rancher/rke2/agent/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots\n"
"mkdir -p /var/lib/rancher/rke2/data\n"
"mkdir -p /var/run/flannel\n"
"mkdir -p /var/run/k3s\n"
"restorecon -R -i /etc/systemd/system/rke2.service\n"
"restorecon -R -i /usr/lib/systemd/system/rke2.service\n"
"restorecon -R /var/lib/cni\n"
"restorecon -R /opt/cni\n"
"restorecon -R /var/lib/kubelet\n"
"restorecon -R /var/lib/rancher\n"
"restorecon -R /var/run/k3s\n"
"restorecon -R /var/run/flannel\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:33
msgid ""
"It's time for the RKE2 cluster to be installed but before that, RKE2 must be "
"running Selinux mode:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:34
#, no-wrap
msgid "mkdir -p /etc/rancher/rke2 && echo \"selinux: true\" >> /etc/rancher/rke2/config.yaml\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:35
msgid "Install RKE2 Using Install Script"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:36
#, no-wrap
msgid ""
"curl -sfL https://get.rke2.io | INSTALL_RKE2_EXEC=\"server\" \\\n"
" RKE2_SELINUX=true INSTALL_RKE2_VERSION=v1.28.9+rke2r1 sh -\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:37
#, no-wrap
msgid ""
"# Enable and Start RKE2\n"
"systemctl enable --now rke2-server.service\n"
msgstr ""

#. type: delimited block =
#: asciidoc/misc/rke2-selinux.adoc:38
msgid ""
"RKE2 version `1.27` is the first that supports `arm64` architecture and it "
"is still an experimental feature."
msgstr ""

#. type: Title ===
#: asciidoc/misc/rke2-selinux.adoc:39
#, no-wrap
msgid "Get the Kubeconfig"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:40
msgid ""
"To use the Kubeconfig outside of the node, the following commands can be "
"used:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:41
#, no-wrap
msgid ""
"# Replace <node-ip> with the actual ip\n"
"export NODE_IP=<node-ip>\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:42
#, no-wrap
msgid ""
"sudo scp ${NODE_IP}:/etc/rancher/rke2/rke2.yaml ~/.kube/config && \\\n"
" sed -i '' \"s/127.0.0.1/${NODE_IP}/g\" ~/.kube/config && chmod 600 ~/.kube/config\n"
msgstr ""

#. type: Title ===
#: asciidoc/misc/rke2-selinux.adoc:43
#, no-wrap
msgid "Verify the setup"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:44
msgid "Check SELinux status:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:45
#, no-wrap
msgid "sestatus\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:46 asciidoc/misc/rke2-selinux.adoc:50
msgid "The output should be similar to this one:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:47
#, no-wrap
msgid ""
"SELinux status:                 enabled\n"
"SELinuxfs mount:                /sys/fs/selinux\n"
"SELinux root directory:         /etc/selinux\n"
"Loaded policy name:             targeted\n"
"Current mode:                   enforcing\n"
"Mode from config file:          enforcing\n"
"Policy MLS status:              enabled\n"
"Policy deny_unknown status:     allowed\n"
"Memory protection checking:     requested (insecure)\n"
"Max kernel policy version:      33\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/rke2-selinux.adoc:48
msgid "Check that all pods are in Running state:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:49
#, no-wrap
msgid "kubectl get pod -A\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/rke2-selinux.adoc:51
#, no-wrap
msgid ""
"NAMESPACE     NAME                                  READY   STATUS      RESTARTS       AGE\n"
"kube-system   cloud-controller-manager-slemicro     1/1     Running     0 (2m3s ago)   3d5h\n"
"kube-system   etcd-slemicro                         1/1     Running     0 (2m9s ago)   3d5h\n"
"kube-system   kube-apiserver-slemicro               1/1     Running     0 (2m9s ago)   3d5h\n"
"kube-system   kube-controller-manager-slemicro      1/1     Running     0 (2m7s ago)   3d5h\n"
"(2m9s ago)   3d5h\n"
"...\n"
msgstr ""

#. type: Title =
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:1
#, no-wrap
msgid "Running the sushy-emulator as a container on SLES/openSUSE "
msgstr ""

#. type: Plain text
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:3
msgid "SLES or openSUSE host"
msgstr ""

#. type: Plain text
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:4
msgid ""
"`qemu-ovmf-x86_64` if you want secure boot (It can be installed with https://"
"software.opensuse.org/package/qemu-ovmf-x86_64[`zypper`])"
msgstr ""

#. type: Title ==
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:5
#, no-wrap
msgid "Preparation"
msgstr ""

#. type: Plain text
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:6
msgid ""
"Create the `/etc/sushy/` folder to store the configuration and certificates"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:7
#, no-wrap
msgid ""
"mkdir -p /etc/sushy/\n"
"cd /etc/sushy/\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:8
msgid ""
"Ansible Redfish module https://github.com/ansible-collections/community."
"general/blob/main/plugins/modules/redfish_command.py#L851C5-L851C13[requires "
"https]:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:9
#, no-wrap
msgid ""
"# Build root URI\n"
"root_uri = \"https://\" + module.params['baseuri']\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:10
msgid ""
"Create the certificate and key (hint: this is not the best way to create "
"them as it is passwordless and 10 years of expiration)"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:11
#, no-wrap
msgid ""
"openssl req -new -newkey rsa:4096 -days 3650 -nodes -x509 \\\n"
"    -subj \"/C=ES/ST=Madrid/L=Las Rozas/O=Foo/CN=sushy-emulator\" \\\n"
"    -keyout sushy-emulator.key -out sushy-emulator.crt\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:12
msgid "Create the config file for the sushy-emulator as:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:13
#, no-wrap
msgid ""
"cat << EOF > /etc/sushy/sushy-emulator.conf\n"
"SUSHY_EMULATOR_LISTEN_IP = u'0.0.0.0'\n"
"SUSHY_EMULATOR_LISTEN_PORT = 8443\n"
"SUSHY_EMULATOR_SSL_CERT = u'/etc/sushy/sushy-emulator.crt'\n"
"SUSHY_EMULATOR_SSL_KEY = u'/etc/sushy/sushy-emulator.key'\n"
"SUSHY_EMULATOR_OS_CLOUD = None\n"
"SUSHY_EMULATOR_LIBVIRT_URI = u'qemu:///system'\n"
"SUSHY_EMULATOR_IGNORE_BOOT_DEVICE = True\n"
"SUSHY_EMULATOR_BOOT_LOADER_MAP = {\n"
"    u'UEFI': {\n"
"        u'x86_64': u'/usr/share/qemu/ovmf-x86_64-ms-code.bin'\n"
"    },\n"
"    u'Legacy': {\n"
"        u'x86_64': None\n"
"    }\n"
"}\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:14
msgid ""
"Create the systemd unit file for the container to be executed properly "
"(including the paths, files, etc.):"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:15
#, no-wrap
msgid ""
"cat << 'EOF' > /etc/systemd/system/container-sushy-emulator.service\n"
"[Unit]\n"
"Description=Podman container-sushy-emulator.service\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:16
#, no-wrap
msgid ""
"[Service]\n"
"# To avoid filling up the disk https://storyboard.openstack.org/#!/story/2011064\n"
"# The service is restarted once a day (to clean up the /tmp folder)\n"
"Restart=always\n"
"RuntimeMaxSec=1d\n"
"ExecStartPre=/usr/bin/rm -f /%t/%n-pid /%t/%n-cid\n"
"ExecStart=/usr/bin/podman run --conmon-pidfile /%t/%n-pid --cidfile /%t/%n-cid \\\n"
"  --name=\"sushy-emulator\" \\\n"
"  --privileged -d --replace \\\n"
"  -v /etc/sushy:/etc/sushy:ro \\\n"
"  -v /var/run/libvirt:/var/run/libvirt \\\n"
"  -v /usr/share/qemu/ovmf-x86_64-ms-code.bin:/usr/share/qemu/ovmf-x86_64-ms-code.bin \\\n"
"  -v /etc/localtime:/etc/localtime:ro \\\n"
"  -e SUSHY_EMULATOR_CONFIG=/etc/sushy/sushy-emulator.conf \\\n"
"  -p 8443:8443 \\\n"
"  quay.io/metal3-io/sushy-tools:latest sushy-emulator\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:17
#, no-wrap
msgid ""
"ExecStop=/usr/bin/podman stop -t 10 sushy-emulator\n"
"ExecStopPost=/usr/bin/sh -c \"/usr/bin/podman rm -f `cat /%t/%n-cid`\"\n"
"KillMode=none\n"
"Type=forking\n"
"PIDFile=/%t/%n-pid\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:18
#, no-wrap
msgid ""
"[Install]\n"
"WantedBy=default.target\n"
"EOF\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:19
msgid ""
"Notify systemd for the new unit file, enable the service at boot and start "
"it:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:20
#, no-wrap
msgid ""
"systemctl daemon-reload\n"
"systemctl enable --now container-sushy-emulator\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:21
msgid ""
"Open the 8443/tcp port if required to be reachable from the outside world:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:22
#, no-wrap
msgid ""
"firewall-cmd --add-port=8443/tcp --zone=public --permanent\n"
"firewall-cmd --add-port=8443/tcp --zone=public\n"
msgstr ""

#. type: Title ==
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:23
#, no-wrap
msgid "Testing"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:24
#, no-wrap
msgid ""
"curl https://localhost:8443/redfish/v1/Systems\n"
"curl: (60) SSL certificate problem: self signed certificate\n"
"More details here: https://curl.se/docs/sslcerts.html\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:25
#, no-wrap
msgid ""
"curl failed to verify the legitimacy of the server and therefore could not\n"
"establish a secure connection to it. To learn more about this situation and\n"
"how to fix it, please visit the web page mentioned above.\n"
msgstr ""

#. type: Plain text
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:26
msgid "Ignoring the certificate:"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:27
#, no-wrap
msgid ""
"curl https://localhost:8443/redfish/v1/Systems -k\n"
"{\n"
"    \"@odata.type\": \"#ComputerSystemCollection.ComputerSystemCollection\",\n"
"    \"Name\": \"Computer System Collection\",\n"
"    \"Members@odata.count\": 6,\n"
"    \"Members\": [\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:28
#, no-wrap
msgid ""
"            {\n"
"                \"@odata.id\": \"/redfish/v1/Systems/1a3cc749-dd03-4f2b-a588-981c8fbf2911\"\n"
"            },\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:29
#, no-wrap
msgid ""
"            {\n"
"                \"@odata.id\": \"/redfish/v1/Systems/7201e8ab-28e3-4847-a68b-f008d8af21df\"\n"
"            },\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:30
#, no-wrap
msgid ""
"            {\n"
"                \"@odata.id\": \"/redfish/v1/Systems/eaa7c6b1-5195-4677-8473-e96114c88d02\"\n"
"            },\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:31
#, no-wrap
msgid ""
"            {\n"
"                \"@odata.id\": \"/redfish/v1/Systems/5940f178-aa88-4b12-8640-b3e87723d0dd\"\n"
"            },\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:32
#, no-wrap
msgid ""
"            {\n"
"                \"@odata.id\": \"/redfish/v1/Systems/57e13c2f-aabb-488d-a895-db8150d0bf34\"\n"
"            },\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:33
#, no-wrap
msgid ""
"            {\n"
"                \"@odata.id\": \"/redfish/v1/Systems/a2436047-7663-46d7-bd83-ea7b359cf237\"\n"
"            }\n"
msgstr ""

#. type: delimited block -
#: asciidoc/misc/sushy-emulator-sles-certificates-container.adoc:34
#, no-wrap
msgid ""
"    ],\n"
"    \"@odata.context\": \"/redfish/v1/$metadata#ComputerSystemCollection.ComputerSystemCollection\",\n"
"    \"@odata.id\": \"/redfish/v1/Systems\",\n"
"    \"@Redfish.Copyright\": \"Copyright 2014-2016 Distributed Management Task Force, Inc. (DMTF). For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright.\"\n"
"}\n"
msgstr ""
